//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HRPortal.HRPortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HRPortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal")]
    public partial class HRPortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendStudentTimetableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResultSlipOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnsuggestsubindicatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveAditionalInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveAditionalInitiativeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendStaffPerformanceContractApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLockStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSignStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateIndividualPcReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateIndividualPcSubIndicatorReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertJDTargetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestJDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAnnualWorkplanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSelectedAdditionalActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateCSPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateAWPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateBoardPCReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedPLogCategories2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPerformanceLogEntry2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPlogLines2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetSubPlogLines2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogLines2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogandSubPlogData2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePerformanceTargetLinesDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemovePerformanceLogSubLine2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemovePerformanceLogLine2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPlogSubActivities2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPlogApproval2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelPlogApproval2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePlogReport2OperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedAddPLogCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedJDPLogCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedPLogCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoadCompetenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAppraisalSuggestObjectivesOutcomesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateStandardAppraisalReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddInnovationResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddInnovationResponseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddInnovationObjectiveResponseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddInnovationAdditionalResponseLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditInnovationOverviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditInnovationObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditInnovationAdditionNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInnovationResponseLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateInnovationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRMReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateManagementPlanSummeryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRiskFrameworkTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalaryAdvanceApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSalaryAdvanceApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CarLoanApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCarLoanApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStudentResultSlipOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRiskStatusReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseRiskOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRiskResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddRiskRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRiskRegisterDivisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostDivisionRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddRiskOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddRiskMitigationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRiskOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateEmployeeStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateP9OperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHobbyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImprestObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestMemoApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateImprestSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSurrenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePurchaseStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPurchaseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFleetRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionNonStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFleetRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveStaffFromTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMemberFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFuelFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateLeaveFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRecordForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelRecordApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStaffClaimApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStoreRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStoreRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyexternalHrJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyinternalHrJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmploymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmploymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProffessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProfessionalBodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddApplicantAccomplishmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAbilityDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCurrentDutiesSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherPersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDutiesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAcademicLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfessionalLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProffessionalBodyLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmploymentHistoryLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefereeLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeclarationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProfileForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountForExtenalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPasswordtForExtenalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateIctRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProvideIctfeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIctRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyexternalJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemDescByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback EscalatedHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReopenHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmploymentHistoryForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicQualificationsForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProffessionalQualificationsForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingAttendedForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProfessionalBodyForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRefereeForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAcademicLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfessionalLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProffessionalBodyLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefereeLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFavouriteJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFavouriteJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImprestSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStoreRequsitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStaffClaimSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLeaveSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImprestSurrenderSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPurchaseRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSpecialImprestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPettyCashRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulatePettyCashSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePettyCashSurrenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPettyCashSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPettyCashSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPettyCashSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngetImprestLineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback StudentTimetableOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintReceiptBookinOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintReceiptExemptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HRPortal() {
            this.Url = global::HRPortal.Properties.Settings.Default.HRPortal_HRPortal_HRPortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendStudentTimetableCompletedEventHandler SendStudentTimetableCompleted;
        
        /// <remarks/>
        public event ResultSlipCompletedEventHandler ResultSlipCompleted;
        
        /// <remarks/>
        public event FnNewStaffPerformanceContractCompletedEventHandler FnNewStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedCoreInitiativesCompletedEventHandler FnSubmitSelectedCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnsuggestsubindicatorsCompletedEventHandler FnsuggestsubindicatorsCompleted;
        
        /// <remarks/>
        public event FnSaveCoreInitiativesCompletedEventHandler FnSaveCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnRemoveCoreInitiativesCompletedEventHandler FnRemoveCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnSaveAditionalInitiativesCompletedEventHandler FnSaveAditionalInitiativesCompleted;
        
        /// <remarks/>
        public event FnRemoveAditionalInitiativeCompletedEventHandler FnRemoveAditionalInitiativeCompleted;
        
        /// <remarks/>
        public event FnDeleteIndividualCardSubActivitiesCompletedEventHandler FnDeleteIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnNewIndividualCardSubActivitiesCompletedEventHandler FnNewIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnEditIndividualCardSubActivitiesCompletedEventHandler FnEditIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnSendStaffPerformanceContractApprovalCompletedEventHandler FnSendStaffPerformanceContractApprovalCompleted;
        
        /// <remarks/>
        public event FnCancelStaffPerformanceContractCompletedEventHandler FnCancelStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnLockStaffPerformanceContractCompletedEventHandler FnLockStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSignStaffPerformanceContractCompletedEventHandler FnSignStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnGenerateIndividualPcReportCompletedEventHandler FnGenerateIndividualPcReportCompleted;
        
        /// <remarks/>
        public event FnGenerateIndividualPcSubIndicatorReportCompletedEventHandler FnGenerateIndividualPcSubIndicatorReportCompleted;
        
        /// <remarks/>
        public event FnInsertJDTargetsCompletedEventHandler FnInsertJDTargetsCompleted;
        
        /// <remarks/>
        public event FnSuggestJDCompletedEventHandler FnSuggestJDCompleted;
        
        /// <remarks/>
        public event FnGetAnnualWorkplanLinesCompletedEventHandler FnGetAnnualWorkplanLinesCompleted;
        
        /// <remarks/>
        public event FnInsertSelectedAdditionalActivitiesCompletedEventHandler FnInsertSelectedAdditionalActivitiesCompleted;
        
        /// <remarks/>
        public event FnGenerateCSPReportCompletedEventHandler FnGenerateCSPReportCompleted;
        
        /// <remarks/>
        public event FnGenerateAWPReportCompletedEventHandler FnGenerateAWPReportCompleted;
        
        /// <remarks/>
        public event FnGenerateBoardPCReportCompletedEventHandler FnGenerateBoardPCReportCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedPLogCategories2CompletedEventHandler FnSubmitSelectedPLogCategories2Completed;
        
        /// <remarks/>
        public event FnNewPerformanceLogEntry2CompletedEventHandler FnNewPerformanceLogEntry2Completed;
        
        /// <remarks/>
        public event FnGetPlogLines2CompletedEventHandler FnGetPlogLines2Completed;
        
        /// <remarks/>
        public event FnGetSubPlogLines2CompletedEventHandler FnGetSubPlogLines2Completed;
        
        /// <remarks/>
        public event FnSuggestPlogLines2CompletedEventHandler FnSuggestPlogLines2Completed;
        
        /// <remarks/>
        public event FnSuggestPlogandSubPlogData2CompletedEventHandler FnSuggestPlogandSubPlogData2Completed;
        
        /// <remarks/>
        public event FnUpdatePerformanceTargetLinesDetails2CompletedEventHandler FnUpdatePerformanceTargetLinesDetails2Completed;
        
        /// <remarks/>
        public event FnRemovePerformanceLogSubLine2CompletedEventHandler FnRemovePerformanceLogSubLine2Completed;
        
        /// <remarks/>
        public event FnRemovePerformanceLogLine2CompletedEventHandler FnRemovePerformanceLogLine2Completed;
        
        /// <remarks/>
        public event FnInsertPlogSubActivities2CompletedEventHandler FnInsertPlogSubActivities2Completed;
        
        /// <remarks/>
        public event FnSendPlogApproval2CompletedEventHandler FnSendPlogApproval2Completed;
        
        /// <remarks/>
        public event FnCancelPlogApproval2CompletedEventHandler FnCancelPlogApproval2Completed;
        
        /// <remarks/>
        public event FnGeneratePlogReport2CompletedEventHandler FnGeneratePlogReport2Completed;
        
        /// <remarks/>
        public event FnSubmitSelectedAddPLogCategoriesCompletedEventHandler FnSubmitSelectedAddPLogCategoriesCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedJDPLogCategoriesCompletedEventHandler FnSubmitSelectedJDPLogCategoriesCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedPLogCategoriesCompletedEventHandler FnSubmitSelectedPLogCategoriesCompleted;
        
        /// <remarks/>
        public event FnNewStandardAppraisalCompletedEventHandler FnNewStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnLoadCompetenciesCompletedEventHandler FnLoadCompetenciesCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalCompletedEventHandler FnSubmitStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler FnAppraisalSuggestObjectivesOutcomesCompleted;
        
        /// <remarks/>
        public event FnGenerateStandardAppraisalReportCompletedEventHandler FnGenerateStandardAppraisalReportCompleted;
        
        /// <remarks/>
        public event FnAddInnovationResponseCompletedEventHandler FnAddInnovationResponseCompleted;
        
        /// <remarks/>
        public event FnAddInnovationResponseLinesCompletedEventHandler FnAddInnovationResponseLinesCompleted;
        
        /// <remarks/>
        public event FnAddInnovationObjectiveResponseLinesCompletedEventHandler FnAddInnovationObjectiveResponseLinesCompleted;
        
        /// <remarks/>
        public event FnAddInnovationAdditionalResponseLinesCompletedEventHandler FnAddInnovationAdditionalResponseLinesCompleted;
        
        /// <remarks/>
        public event EditInnovationOverviewCompletedEventHandler EditInnovationOverviewCompleted;
        
        /// <remarks/>
        public event EditInnovationObjectiveCompletedEventHandler EditInnovationObjectiveCompleted;
        
        /// <remarks/>
        public event EditInnovationAdditionNotesCompletedEventHandler EditInnovationAdditionNotesCompleted;
        
        /// <remarks/>
        public event DeleteInnovationResponseLineCompletedEventHandler DeleteInnovationResponseLineCompleted;
        
        /// <remarks/>
        public event GenerateInnovationReportCompletedEventHandler GenerateInnovationReportCompleted;
        
        /// <remarks/>
        public event FnSubmitResponseCompletedEventHandler FnSubmitResponseCompleted;
        
        /// <remarks/>
        public event GenerateRMReportCompletedEventHandler GenerateRMReportCompleted;
        
        /// <remarks/>
        public event GenerateManagementPlanSummeryCompletedEventHandler GenerateManagementPlanSummeryCompleted;
        
        /// <remarks/>
        public event GenerateRiskFrameworkTestCompletedEventHandler GenerateRiskFrameworkTestCompleted;
        
        /// <remarks/>
        public event SalaryAdvanceApplicationCompletedEventHandler SalaryAdvanceApplicationCompleted;
        
        /// <remarks/>
        public event SendSalaryAdvanceApprovalCompletedEventHandler SendSalaryAdvanceApprovalCompleted;
        
        /// <remarks/>
        public event CarLoanApplicationCompletedEventHandler CarLoanApplicationCompleted;
        
        /// <remarks/>
        public event SendCarLoanApprovalCompletedEventHandler SendCarLoanApprovalCompleted;
        
        /// <remarks/>
        public event SendStudentResultSlipCompletedEventHandler SendStudentResultSlipCompleted;
        
        /// <remarks/>
        public event CreateRiskStatusReportCompletedEventHandler CreateRiskStatusReportCompleted;
        
        /// <remarks/>
        public event CloseRiskCompletedEventHandler CloseRiskCompleted;
        
        /// <remarks/>
        public event AddRiskResponseCompletedEventHandler AddRiskResponseCompleted;
        
        /// <remarks/>
        public event FnAddRiskRegisterCompletedEventHandler FnAddRiskRegisterCompleted;
        
        /// <remarks/>
        public event CreateRiskRegisterDivisionCompletedEventHandler CreateRiskRegisterDivisionCompleted;
        
        /// <remarks/>
        public event PostDivisionRegisterCompletedEventHandler PostDivisionRegisterCompleted;
        
        /// <remarks/>
        public event FnAddRiskOwnershipCompletedEventHandler FnAddRiskOwnershipCompleted;
        
        /// <remarks/>
        public event FnAddRiskMitigationCompletedEventHandler FnAddRiskMitigationCompleted;
        
        /// <remarks/>
        public event DeleteRiskCompletedEventHandler DeleteRiskCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event LeaveApplicationCompletedEventHandler LeaveApplicationCompleted;
        
        /// <remarks/>
        public event GeneratePayslipCompletedEventHandler GeneratePayslipCompleted;
        
        /// <remarks/>
        public event GenerateEmployeeStatementCompletedEventHandler GenerateEmployeeStatementCompleted;
        
        /// <remarks/>
        public event GenerateP9CompletedEventHandler GenerateP9Completed;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event AddHobbyCompletedEventHandler AddHobbyCompleted;
        
        /// <remarks/>
        public event UpdateGeneralDetailsCompletedEventHandler UpdateGeneralDetailsCompleted;
        
        /// <remarks/>
        public event UpdatePersonalDetailsCompletedEventHandler UpdatePersonalDetailsCompleted;
        
        /// <remarks/>
        public event UpdateCommunicationDetailsCompletedEventHandler UpdateCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event AddRefereeCompletedEventHandler AddRefereeCompleted;
        
        /// <remarks/>
        public event AddQualificationCompletedEventHandler AddQualificationCompleted;
        
        /// <remarks/>
        public event ApplyCompletedEventHandler ApplyCompleted;
        
        /// <remarks/>
        public event ImprestGeneralDetailsCompletedEventHandler ImprestGeneralDetailsCompleted;
        
        /// <remarks/>
        public event GetImprestObjectiveCompletedEventHandler GetImprestObjectiveCompleted;
        
        /// <remarks/>
        public event AddTeamMemberCompletedEventHandler AddTeamMemberCompleted;
        
        /// <remarks/>
        public event AddFuelCompletedEventHandler AddFuelCompleted;
        
        /// <remarks/>
        public event AddCasualsCompletedEventHandler AddCasualsCompleted;
        
        /// <remarks/>
        public event AddOtherCostsCompletedEventHandler AddOtherCostsCompleted;
        
        /// <remarks/>
        public event SendImprestMemoApprovalCompletedEventHandler SendImprestMemoApprovalCompleted;
        
        /// <remarks/>
        public event CreateImprestSurrenderCompletedEventHandler CreateImprestSurrenderCompleted;
        
        /// <remarks/>
        public event SendImprestSurrenderApprovalCompletedEventHandler SendImprestSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event UpdateSurrenderLineCompletedEventHandler UpdateSurrenderLineCompleted;
        
        /// <remarks/>
        public event CreatePurchaseStoreRequisitionCompletedEventHandler CreatePurchaseStoreRequisitionCompleted;
        
        /// <remarks/>
        public event CreateRequisitionLineCompletedEventHandler CreateRequisitionLineCompleted;
        
        /// <remarks/>
        public event SendPurchaseRequisitionApprovalCompletedEventHandler SendPurchaseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CreateFleetRequisitionCompletedEventHandler CreateFleetRequisitionCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionStaffCompletedEventHandler AddFleetRequisitionStaffCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionNonStaffCompletedEventHandler AddFleetRequisitionNonStaffCompleted;
        
        /// <remarks/>
        public event SendFleetRequisitionApprovalCompletedEventHandler SendFleetRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event RemoveStaffFromTravelRequisitionCompletedEventHandler RemoveStaffFromTravelRequisitionCompleted;
        
        /// <remarks/>
        public event RemoveMemberFromImprestMemoCompletedEventHandler RemoveMemberFromImprestMemoCompleted;
        
        /// <remarks/>
        public event EditTeamMemberCompletedEventHandler EditTeamMemberCompleted;
        
        /// <remarks/>
        public event RemoveFuelFromImprestMemoCompletedEventHandler RemoveFuelFromImprestMemoCompleted;
        
        /// <remarks/>
        public event EditFuelCompletedEventHandler EditFuelCompleted;
        
        /// <remarks/>
        public event RemoveCasualsCompletedEventHandler RemoveCasualsCompleted;
        
        /// <remarks/>
        public event EditCasualsCompletedEventHandler EditCasualsCompleted;
        
        /// <remarks/>
        public event RemoveOtherCostsCompletedEventHandler RemoveOtherCostsCompleted;
        
        /// <remarks/>
        public event EditOtherCostsCompletedEventHandler EditOtherCostsCompleted;
        
        /// <remarks/>
        public event GenerateLeaveFormCompletedEventHandler GenerateLeaveFormCompleted;
        
        /// <remarks/>
        public event SendRecordForApprovalCompletedEventHandler SendRecordForApprovalCompleted;
        
        /// <remarks/>
        public event CancelRecordApprovalCompletedEventHandler CancelRecordApprovalCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event DeleteRequisitionLineCompletedEventHandler DeleteRequisitionLineCompleted;
        
        /// <remarks/>
        public event SendStaffClaimApprovalCompletedEventHandler SendStaffClaimApprovalCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimCompletedEventHandler CreateStaffClaimCompleted;
        
        /// <remarks/>
        public event DeleteStaffClaimLineCompletedEventHandler DeleteStaffClaimLineCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimLineCompletedEventHandler CreateStaffClaimLineCompleted;
        
        /// <remarks/>
        public event EditStaffClaimLineCompletedEventHandler EditStaffClaimLineCompleted;
        
        /// <remarks/>
        public event SendStoreRequisitionApprovalCompletedEventHandler SendStoreRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CreateStoreRequisitionLineCompletedEventHandler CreateStoreRequisitionLineCompleted;
        
        /// <remarks/>
        public event ApplyexternalHrJobsCompletedEventHandler ApplyexternalHrJobsCompleted;
        
        /// <remarks/>
        public event ApplyinternalHrJobsCompletedEventHandler ApplyinternalHrJobsCompleted;
        
        /// <remarks/>
        public event UpdateEmploymentHistoryCompletedEventHandler UpdateEmploymentHistoryCompleted;
        
        /// <remarks/>
        public event AddEmploymentHistoryCompletedEventHandler AddEmploymentHistoryCompleted;
        
        /// <remarks/>
        public event AddAcademicQualificationsCompletedEventHandler AddAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event AddProffessionalQualificationsCompletedEventHandler AddProffessionalQualificationsCompleted;
        
        /// <remarks/>
        public event AddTrainingAttendedCompletedEventHandler AddTrainingAttendedCompleted;
        
        /// <remarks/>
        public event AddProfessionalBodyCompletedEventHandler AddProfessionalBodyCompleted;
        
        /// <remarks/>
        public event AddApplicantAccomplishmentCompletedEventHandler AddApplicantAccomplishmentCompleted;
        
        /// <remarks/>
        public event AddAbilityDetailsCompletedEventHandler AddAbilityDetailsCompleted;
        
        /// <remarks/>
        public event CreateRefereeCompletedEventHandler CreateRefereeCompleted;
        
        /// <remarks/>
        public event AddCurrentDutiesSkillsCompletedEventHandler AddCurrentDutiesSkillsCompleted;
        
        /// <remarks/>
        public event AddOtherPersonalDetailsCompletedEventHandler AddOtherPersonalDetailsCompleted;
        
        /// <remarks/>
        public event AddDutiesDetailsCompletedEventHandler AddDutiesDetailsCompleted;
        
        /// <remarks/>
        public event DeleteAcademicLineCompletedEventHandler DeleteAcademicLineCompleted;
        
        /// <remarks/>
        public event DeleteProfessionalLineCompletedEventHandler DeleteProfessionalLineCompleted;
        
        /// <remarks/>
        public event DeleteTrainingLineCompletedEventHandler DeleteTrainingLineCompleted;
        
        /// <remarks/>
        public event DeleteProffessionalBodyLineCompletedEventHandler DeleteProffessionalBodyLineCompleted;
        
        /// <remarks/>
        public event DeleteEmploymentHistoryLineCompletedEventHandler DeleteEmploymentHistoryLineCompleted;
        
        /// <remarks/>
        public event DeleteRefereeLineCompletedEventHandler DeleteRefereeLineCompleted;
        
        /// <remarks/>
        public event AddDeclarationCompletedEventHandler AddDeclarationCompleted;
        
        /// <remarks/>
        public event CreateProfileForExternalApplicantsCompletedEventHandler CreateProfileForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event CreateAccountForExtenalApplicantsCompletedEventHandler CreateAccountForExtenalApplicantsCompleted;
        
        /// <remarks/>
        public event ForgotPasswordtForExtenalApplicantsCompletedEventHandler ForgotPasswordtForExtenalApplicantsCompleted;
        
        /// <remarks/>
        public event CreateIctRequestCompletedEventHandler CreateIctRequestCompleted;
        
        /// <remarks/>
        public event ProvideIctfeedbackCompletedEventHandler ProvideIctfeedbackCompleted;
        
        /// <remarks/>
        public event UpdateIctRequestCompletedEventHandler UpdateIctRequestCompleted;
        
        /// <remarks/>
        public event ApplyexternalJobCompletedEventHandler ApplyexternalJobCompleted;
        
        /// <remarks/>
        public event GetItemsByLocationCompletedEventHandler GetItemsByLocationCompleted;
        
        /// <remarks/>
        public event GetItemDescByLocationCompletedEventHandler GetItemDescByLocationCompleted;
        
        /// <remarks/>
        public event AssignHelpdeskRequestCompletedEventHandler AssignHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event EscalatedHelpdeskRequestCompletedEventHandler EscalatedHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event ResolveHelpdeskRequestCompletedEventHandler ResolveHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event ReopenHelpdeskRequestCompletedEventHandler ReopenHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event AddEmploymentHistoryForExternalApplcantsCompletedEventHandler AddEmploymentHistoryForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event AddAcademicQualificationsForExternalApplcantsCompletedEventHandler AddAcademicQualificationsForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event AddProffessionalQualificationsForExternalApplcantsCompletedEventHandler AddProffessionalQualificationsForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event AddTrainingAttendedForExternalApplcantsCompletedEventHandler AddTrainingAttendedForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event AddProfessionalBodyForExternalApplcantsCompletedEventHandler AddProfessionalBodyForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event CreateRefereeForExternalApplcantsCompletedEventHandler CreateRefereeForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event DeleteAcademicLineForExternalApplicantsCompletedEventHandler DeleteAcademicLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteProfessionalLineForExternalApplicantsCompletedEventHandler DeleteProfessionalLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteTrainingLineForExternalApplicantsCompletedEventHandler DeleteTrainingLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteProffessionalBodyLineForExternalApplicantsCompletedEventHandler DeleteProffessionalBodyLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventHandler DeleteEmploymentHistoryLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteRefereeLineForExternalApplicantsCompletedEventHandler DeleteRefereeLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event ApplyOnlineCompletedEventHandler ApplyOnlineCompleted;
        
        /// <remarks/>
        public event AddFavouriteJobsCompletedEventHandler AddFavouriteJobsCompleted;
        
        /// <remarks/>
        public event DeleteFavouriteJobsCompletedEventHandler DeleteFavouriteJobsCompleted;
        
        /// <remarks/>
        public event AddImprestSharepointLinksCompletedEventHandler AddImprestSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddStoreRequsitionSharepointLinksCompletedEventHandler AddStoreRequsitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddStaffClaimSharepointLinksCompletedEventHandler AddStaffClaimSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddLeaveSharepointLinksCompletedEventHandler AddLeaveSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddImprestSurrenderSharepointLinksCompletedEventHandler AddImprestSurrenderSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddPurchaseRequisitionSharepointLinksCompletedEventHandler AddPurchaseRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionSharepointLinksCompletedEventHandler AddFleetRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event SendSpecialImprestApprovalCompletedEventHandler SendSpecialImprestApprovalCompleted;
        
        /// <remarks/>
        public event CancelPettyCashRequestApprovalCompletedEventHandler CancelPettyCashRequestApprovalCompleted;
        
        /// <remarks/>
        public event PopulatePettyCashSurrenderCompletedEventHandler PopulatePettyCashSurrenderCompleted;
        
        /// <remarks/>
        public event UpdatePettyCashSurrenderLineCompletedEventHandler UpdatePettyCashSurrenderLineCompleted;
        
        /// <remarks/>
        public event SendPettyCashSurrenderApprovalCompletedEventHandler SendPettyCashSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event CancelPettyCashSurrenderApprovalCompletedEventHandler CancelPettyCashSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event AddPettyCashSharepointLinksCompletedEventHandler AddPettyCashSharepointLinksCompleted;
        
        /// <remarks/>
        public event FngetImprestLineNoCompletedEventHandler FngetImprestLineNoCompleted;
        
        /// <remarks/>
        public event StudentTimetableCompletedEventHandler StudentTimetableCompleted;
        
        /// <remarks/>
        public event PrintReceiptCompletedEventHandler PrintReceiptCompleted;
        
        /// <remarks/>
        public event PrintReceiptBookinCompletedEventHandler PrintReceiptBookinCompleted;
        
        /// <remarks/>
        public event PrintReceiptExemptionCompletedEventHandler PrintReceiptExemptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStudentTimetable", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStudentTimetable_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStudentTimetable(string code) {
            object[] results = this.Invoke("SendStudentTimetable", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStudentTimetableAsync(string code) {
            this.SendStudentTimetableAsync(code, null);
        }
        
        /// <remarks/>
        public void SendStudentTimetableAsync(string code, object userState) {
            if ((this.SendStudentTimetableOperationCompleted == null)) {
                this.SendStudentTimetableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStudentTimetableOperationCompleted);
            }
            this.InvokeAsync("SendStudentTimetable", new object[] {
                        code}, this.SendStudentTimetableOperationCompleted, userState);
        }
        
        private void OnSendStudentTimetableOperationCompleted(object arg) {
            if ((this.SendStudentTimetableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStudentTimetableCompleted(this, new SendStudentTimetableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ResultSlip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ResultSlip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResultSlip(string studentRegNo, string examSittingId) {
            object[] results = this.Invoke("ResultSlip", new object[] {
                        studentRegNo,
                        examSittingId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResultSlipAsync(string studentRegNo, string examSittingId) {
            this.ResultSlipAsync(studentRegNo, examSittingId, null);
        }
        
        /// <remarks/>
        public void ResultSlipAsync(string studentRegNo, string examSittingId, object userState) {
            if ((this.ResultSlipOperationCompleted == null)) {
                this.ResultSlipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResultSlipOperationCompleted);
            }
            this.InvokeAsync("ResultSlip", new object[] {
                        studentRegNo,
                        examSittingId}, this.ResultSlipOperationCompleted, userState);
        }
        
        private void OnResultSlipOperationCompleted(object arg) {
            if ((this.ResultSlipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResultSlipCompleted(this, new ResultSlipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewStaffPerformanceContract(string contractNo, string employeeNo, string description, string seniorOfficerPC) {
            object[] results = this.Invoke("FnNewStaffPerformanceContract", new object[] {
                        contractNo,
                        employeeNo,
                        description,
                        seniorOfficerPC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewStaffPerformanceContractAsync(string contractNo, string employeeNo, string description, string seniorOfficerPC) {
            this.FnNewStaffPerformanceContractAsync(contractNo, employeeNo, description, seniorOfficerPC, null);
        }
        
        /// <remarks/>
        public void FnNewStaffPerformanceContractAsync(string contractNo, string employeeNo, string description, string seniorOfficerPC, object userState) {
            if ((this.FnNewStaffPerformanceContractOperationCompleted == null)) {
                this.FnNewStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnNewStaffPerformanceContract", new object[] {
                        contractNo,
                        employeeNo,
                        description,
                        seniorOfficerPC}, this.FnNewStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnNewStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnNewStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewStaffPerformanceContractCompleted(this, new FnNewStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedCoreInitiatives(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedCoreInitiatives", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedCoreInitiativesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            this.FnSubmitSelectedCoreInitiativesAsync(strategyid, personalscorecardid, workplanNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedCoreInitiativesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedCoreInitiativesOperationCompleted == null)) {
                this.FnSubmitSelectedCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedCoreInitiatives", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber}, this.FnSubmitSelectedCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedCoreInitiativesCompleted(this, new FnSubmitSelectedCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Fnsuggestsubindicators", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Fnsuggestsubindicators_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnsuggestsubindicators(string strategyid, string docNo, string initiativeNumber, string no) {
            object[] results = this.Invoke("Fnsuggestsubindicators", new object[] {
                        strategyid,
                        docNo,
                        initiativeNumber,
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnsuggestsubindicatorsAsync(string strategyid, string docNo, string initiativeNumber, string no) {
            this.FnsuggestsubindicatorsAsync(strategyid, docNo, initiativeNumber, no, null);
        }
        
        /// <remarks/>
        public void FnsuggestsubindicatorsAsync(string strategyid, string docNo, string initiativeNumber, string no, object userState) {
            if ((this.FnsuggestsubindicatorsOperationCompleted == null)) {
                this.FnsuggestsubindicatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnsuggestsubindicatorsOperationCompleted);
            }
            this.InvokeAsync("Fnsuggestsubindicators", new object[] {
                        strategyid,
                        docNo,
                        initiativeNumber,
                        no}, this.FnsuggestsubindicatorsOperationCompleted, userState);
        }
        
        private void OnFnsuggestsubindicatorsOperationCompleted(object arg) {
            if ((this.FnsuggestsubindicatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnsuggestsubindicatorsCompleted(this, new FnsuggestsubindicatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveCoreInitiatives(int entryNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments) {
            object[] results = this.Invoke("FnSaveCoreInitiatives", new object[] {
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveCoreInitiativesAsync(int entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments) {
            this.FnSaveCoreInitiativesAsync(entryNumber, startdate, enddate, agreedTarget, assignedweight, comments, null);
        }
        
        /// <remarks/>
        public void FnSaveCoreInitiativesAsync(int entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments, object userState) {
            if ((this.FnSaveCoreInitiativesOperationCompleted == null)) {
                this.FnSaveCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSaveCoreInitiatives", new object[] {
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight,
                        comments}, this.FnSaveCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSaveCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnSaveCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveCoreInitiativesCompleted(this, new FnSaveCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveCoreInitiatives(string docNo, int entryNumber) {
            object[] results = this.Invoke("FnRemoveCoreInitiatives", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveCoreInitiativesAsync(string docNo, int entryNumber) {
            this.FnRemoveCoreInitiativesAsync(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemoveCoreInitiativesAsync(string docNo, int entryNumber, object userState) {
            if ((this.FnRemoveCoreInitiativesOperationCompleted == null)) {
                this.FnRemoveCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnRemoveCoreInitiatives", new object[] {
                        docNo,
                        entryNumber}, this.FnRemoveCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnRemoveCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnRemoveCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveCoreInitiativesCompleted(this, new FnRemoveCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveAditionalInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveAditionalInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveAditionalInitiatives(int entryno, decimal agreedtarget, decimal annualtarget, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, string comments) {
            object[] results = this.Invoke("FnSaveAditionalInitiatives", new object[] {
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveAditionalInitiativesAsync(int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, string comments) {
            this.FnSaveAditionalInitiativesAsync(entryno, agreedtarget, annualtarget, startdate, enddate, comments, null);
        }
        
        /// <remarks/>
        public void FnSaveAditionalInitiativesAsync(int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, string comments, object userState) {
            if ((this.FnSaveAditionalInitiativesOperationCompleted == null)) {
                this.FnSaveAditionalInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveAditionalInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSaveAditionalInitiatives", new object[] {
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate,
                        comments}, this.FnSaveAditionalInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSaveAditionalInitiativesOperationCompleted(object arg) {
            if ((this.FnSaveAditionalInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveAditionalInitiativesCompleted(this, new FnSaveAditionalInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveAditionalInitiative", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveAditionalInitiative_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveAditionalInitiative(string docNo, int entryno) {
            object[] results = this.Invoke("FnRemoveAditionalInitiative", new object[] {
                        docNo,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveAditionalInitiativeAsync(string docNo, int entryno) {
            this.FnRemoveAditionalInitiativeAsync(docNo, entryno, null);
        }
        
        /// <remarks/>
        public void FnRemoveAditionalInitiativeAsync(string docNo, int entryno, object userState) {
            if ((this.FnRemoveAditionalInitiativeOperationCompleted == null)) {
                this.FnRemoveAditionalInitiativeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveAditionalInitiativeOperationCompleted);
            }
            this.InvokeAsync("FnRemoveAditionalInitiative", new object[] {
                        docNo,
                        entryno}, this.FnRemoveAditionalInitiativeOperationCompleted, userState);
        }
        
        private void OnFnRemoveAditionalInitiativeOperationCompleted(object arg) {
            if ((this.FnRemoveAditionalInitiativeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveAditionalInitiativeCompleted(this, new FnRemoveAditionalInitiativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteIndividualCardSubActivit" +
            "ies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteIndividualCardSubActivities(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            object[] results = this.Invoke("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            this.FnDeleteIndividualCardSubActivitiesAsync(empNo, scorecardNumber, activityNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber, object userState) {
            if ((this.FnDeleteIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnDeleteIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber}, this.FnDeleteIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnDeleteIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnDeleteIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteIndividualCardSubActivitiesCompleted(this, new FnDeleteIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewIndividualCardSubActivities" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewIndividualCardSubActivities(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completiondate, decimal assweight) {
            object[] results = this.Invoke("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        assweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal assweight) {
            this.FnNewIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, subinitiative, subindicator, uom, targets, completiondate, assweight, null);
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal assweight, object userState) {
            if ((this.FnNewIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnNewIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        assweight}, this.FnNewIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnNewIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnNewIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewIndividualCardSubActivitiesCompleted(this, new FnNewIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditIndividualCardSubActivitie" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditIndividualCardSubActivities(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completiondate, decimal agreedweight) {
            object[] results = this.Invoke("FnEditIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        lineno,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        agreedweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal agreedweight) {
            this.FnEditIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, lineno, subinitiative, subindicator, uom, targets, completiondate, agreedweight, null);
        }
        
        /// <remarks/>
        public void FnEditIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal agreedweight, object userState) {
            if ((this.FnEditIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnEditIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnEditIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        lineno,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        agreedweight}, this.FnEditIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnEditIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnEditIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditIndividualCardSubActivitiesCompleted(this, new FnEditIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendStaffPerformanceContractAp" +
            "proval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendStaffPerformanceContractApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendStaffPerformanceContractApproval(string contractNo) {
            object[] results = this.Invoke("FnSendStaffPerformanceContractApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendStaffPerformanceContractApprovalAsync(string contractNo) {
            this.FnSendStaffPerformanceContractApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSendStaffPerformanceContractApprovalAsync(string contractNo, object userState) {
            if ((this.FnSendStaffPerformanceContractApprovalOperationCompleted == null)) {
                this.FnSendStaffPerformanceContractApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendStaffPerformanceContractApprovalOperationCompleted);
            }
            this.InvokeAsync("FnSendStaffPerformanceContractApproval", new object[] {
                        contractNo}, this.FnSendStaffPerformanceContractApprovalOperationCompleted, userState);
        }
        
        private void OnFnSendStaffPerformanceContractApprovalOperationCompleted(object arg) {
            if ((this.FnSendStaffPerformanceContractApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendStaffPerformanceContractApprovalCompleted(this, new FnSendStaffPerformanceContractApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelStaffPerformanceContract" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnCancelStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelStaffPerformanceContractAsync(string contractNo) {
            this.FnCancelStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnCancelStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnCancelStaffPerformanceContractOperationCompleted == null)) {
                this.FnCancelStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnCancelStaffPerformanceContract", new object[] {
                        contractNo}, this.FnCancelStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnCancelStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnCancelStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelStaffPerformanceContractCompleted(this, new FnCancelStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLockStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLockStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLockStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnLockStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLockStaffPerformanceContractAsync(string contractNo) {
            this.FnLockStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnLockStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnLockStaffPerformanceContractOperationCompleted == null)) {
                this.FnLockStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLockStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnLockStaffPerformanceContract", new object[] {
                        contractNo}, this.FnLockStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnLockStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnLockStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLockStaffPerformanceContractCompleted(this, new FnLockStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSignStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSignStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSignStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnSignStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSignStaffPerformanceContractAsync(string contractNo) {
            this.FnSignStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSignStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnSignStaffPerformanceContractOperationCompleted == null)) {
                this.FnSignStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSignStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnSignStaffPerformanceContract", new object[] {
                        contractNo}, this.FnSignStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnSignStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnSignStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSignStaffPerformanceContractCompleted(this, new FnSignStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateIndividualPcReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateIndividualPcReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateIndividualPcReport(string docNo) {
            object[] results = this.Invoke("FnGenerateIndividualPcReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcReportAsync(string docNo) {
            this.FnGenerateIndividualPcReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcReportAsync(string docNo, object userState) {
            if ((this.FnGenerateIndividualPcReportOperationCompleted == null)) {
                this.FnGenerateIndividualPcReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateIndividualPcReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateIndividualPcReport", new object[] {
                        docNo}, this.FnGenerateIndividualPcReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateIndividualPcReportOperationCompleted(object arg) {
            if ((this.FnGenerateIndividualPcReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateIndividualPcReportCompleted(this, new FnGenerateIndividualPcReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateIndividualPcSubIndicat" +
            "orReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateIndividualPcSubIndicatorReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateIndividualPcSubIndicatorReport(string docNo) {
            object[] results = this.Invoke("FnGenerateIndividualPcSubIndicatorReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcSubIndicatorReportAsync(string docNo) {
            this.FnGenerateIndividualPcSubIndicatorReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcSubIndicatorReportAsync(string docNo, object userState) {
            if ((this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted == null)) {
                this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateIndividualPcSubIndicatorReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateIndividualPcSubIndicatorReport", new object[] {
                        docNo}, this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateIndividualPcSubIndicatorReportOperationCompleted(object arg) {
            if ((this.FnGenerateIndividualPcSubIndicatorReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateIndividualPcSubIndicatorReportCompleted(this, new FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertJDTargets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertJDTargets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertJDTargets(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            object[] results = this.Invoke("FnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            this.FnInsertJDTargetsAsync(lineno, workplanno, annualtarget, assignedtarget, null);
        }
        
        /// <remarks/>
        public void FnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget, object userState) {
            if ((this.FnInsertJDTargetsOperationCompleted == null)) {
                this.FnInsertJDTargetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertJDTargetsOperationCompleted);
            }
            this.InvokeAsync("FnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget}, this.FnInsertJDTargetsOperationCompleted, userState);
        }
        
        private void OnFnInsertJDTargetsOperationCompleted(object arg) {
            if ((this.FnInsertJDTargetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertJDTargetsCompleted(this, new FnInsertJDTargetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestJD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestJD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestJD(string workplan) {
            object[] results = this.Invoke("FnSuggestJD", new object[] {
                        workplan});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan) {
            this.FnSuggestJDAsync(workplan, null);
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan, object userState) {
            if ((this.FnSuggestJDOperationCompleted == null)) {
                this.FnSuggestJDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestJDOperationCompleted);
            }
            this.InvokeAsync("FnSuggestJD", new object[] {
                        workplan}, this.FnSuggestJDOperationCompleted, userState);
        }
        
        private void OnFnSuggestJDOperationCompleted(object arg) {
            if ((this.FnSuggestJDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestJDCompleted(this, new FnSuggestJDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetAnnualWorkplanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetAnnualWorkplanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAnnualWorkplanLines(string csp, string annualcode) {
            object[] results = this.Invoke("FnGetAnnualWorkplanLines", new object[] {
                        csp,
                        annualcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAnnualWorkplanLinesAsync(string csp, string annualcode) {
            this.FnGetAnnualWorkplanLinesAsync(csp, annualcode, null);
        }
        
        /// <remarks/>
        public void FnGetAnnualWorkplanLinesAsync(string csp, string annualcode, object userState) {
            if ((this.FnGetAnnualWorkplanLinesOperationCompleted == null)) {
                this.FnGetAnnualWorkplanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAnnualWorkplanLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetAnnualWorkplanLines", new object[] {
                        csp,
                        annualcode}, this.FnGetAnnualWorkplanLinesOperationCompleted, userState);
        }
        
        private void OnFnGetAnnualWorkplanLinesOperationCompleted(object arg) {
            if ((this.FnGetAnnualWorkplanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAnnualWorkplanLinesCompleted(this, new FnGetAnnualWorkplanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertSelectedAdditionalActivi" +
            "ties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertSelectedAdditionalActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSelectedAdditionalActivities(string csp, string annualcode, string personalPc, string activityID) {
            object[] results = this.Invoke("FnInsertSelectedAdditionalActivities", new object[] {
                        csp,
                        annualcode,
                        personalPc,
                        activityID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSelectedAdditionalActivitiesAsync(string csp, string annualcode, string personalPc, string activityID) {
            this.FnInsertSelectedAdditionalActivitiesAsync(csp, annualcode, personalPc, activityID, null);
        }
        
        /// <remarks/>
        public void FnInsertSelectedAdditionalActivitiesAsync(string csp, string annualcode, string personalPc, string activityID, object userState) {
            if ((this.FnInsertSelectedAdditionalActivitiesOperationCompleted == null)) {
                this.FnInsertSelectedAdditionalActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSelectedAdditionalActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnInsertSelectedAdditionalActivities", new object[] {
                        csp,
                        annualcode,
                        personalPc,
                        activityID}, this.FnInsertSelectedAdditionalActivitiesOperationCompleted, userState);
        }
        
        private void OnFnInsertSelectedAdditionalActivitiesOperationCompleted(object arg) {
            if ((this.FnInsertSelectedAdditionalActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSelectedAdditionalActivitiesCompleted(this, new FnInsertSelectedAdditionalActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateCSPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateCSPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateCSPReport(string docNo) {
            object[] results = this.Invoke("FnGenerateCSPReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateCSPReportAsync(string docNo) {
            this.FnGenerateCSPReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateCSPReportAsync(string docNo, object userState) {
            if ((this.FnGenerateCSPReportOperationCompleted == null)) {
                this.FnGenerateCSPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateCSPReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateCSPReport", new object[] {
                        docNo}, this.FnGenerateCSPReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateCSPReportOperationCompleted(object arg) {
            if ((this.FnGenerateCSPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateCSPReportCompleted(this, new FnGenerateCSPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateAWPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateAWPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateAWPReport(string docNo) {
            object[] results = this.Invoke("FnGenerateAWPReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateAWPReportAsync(string docNo) {
            this.FnGenerateAWPReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateAWPReportAsync(string docNo, object userState) {
            if ((this.FnGenerateAWPReportOperationCompleted == null)) {
                this.FnGenerateAWPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateAWPReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateAWPReport", new object[] {
                        docNo}, this.FnGenerateAWPReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateAWPReportOperationCompleted(object arg) {
            if ((this.FnGenerateAWPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateAWPReportCompleted(this, new FnGenerateAWPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateBoardPCReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateBoardPCReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateBoardPCReport(string docNo) {
            object[] results = this.Invoke("FnGenerateBoardPCReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateBoardPCReportAsync(string docNo) {
            this.FnGenerateBoardPCReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateBoardPCReportAsync(string docNo, object userState) {
            if ((this.FnGenerateBoardPCReportOperationCompleted == null)) {
                this.FnGenerateBoardPCReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateBoardPCReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateBoardPCReport", new object[] {
                        docNo}, this.FnGenerateBoardPCReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateBoardPCReportOperationCompleted(object arg) {
            if ((this.FnGenerateBoardPCReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateBoardPCReportCompleted(this, new FnGenerateBoardPCReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedPLogCategories2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedPLogCategories2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedPLogCategories2(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedPLogCategories2", new object[] {
                        strategyid,
                        personalscorecardid,
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategories2Async(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedPLogCategories2Async(strategyid, personalscorecardid, plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategories2Async(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedPLogCategories2OperationCompleted == null)) {
                this.FnSubmitSelectedPLogCategories2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedPLogCategories2OperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedPLogCategories2", new object[] {
                        strategyid,
                        personalscorecardid,
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedPLogCategories2OperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedPLogCategories2OperationCompleted(object arg) {
            if ((this.FnSubmitSelectedPLogCategories2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedPLogCategories2Completed(this, new FnSubmitSelectedPLogCategories2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewPerformanceLogEntry2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewPerformanceLogEntry2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPerformanceLogEntry2(string docNo, string empNo, string scorecardNumber, string description) {
            object[] results = this.Invoke("FnNewPerformanceLogEntry2", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntry2Async(string docNo, string empNo, string scorecardNumber, string description) {
            this.FnNewPerformanceLogEntry2Async(docNo, empNo, scorecardNumber, description, null);
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntry2Async(string docNo, string empNo, string scorecardNumber, string description, object userState) {
            if ((this.FnNewPerformanceLogEntry2OperationCompleted == null)) {
                this.FnNewPerformanceLogEntry2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPerformanceLogEntry2OperationCompleted);
            }
            this.InvokeAsync("FnNewPerformanceLogEntry2", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description}, this.FnNewPerformanceLogEntry2OperationCompleted, userState);
        }
        
        private void OnFnNewPerformanceLogEntry2OperationCompleted(object arg) {
            if ((this.FnNewPerformanceLogEntry2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPerformanceLogEntry2Completed(this, new FnNewPerformanceLogEntry2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetPlogLines2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetPlogLines2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPlogLines2(string docNo, string empNo) {
            object[] results = this.Invoke("FnGetPlogLines2", new object[] {
                        docNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPlogLines2Async(string docNo, string empNo) {
            this.FnGetPlogLines2Async(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void FnGetPlogLines2Async(string docNo, string empNo, object userState) {
            if ((this.FnGetPlogLines2OperationCompleted == null)) {
                this.FnGetPlogLines2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPlogLines2OperationCompleted);
            }
            this.InvokeAsync("FnGetPlogLines2", new object[] {
                        docNo,
                        empNo}, this.FnGetPlogLines2OperationCompleted, userState);
        }
        
        private void OnFnGetPlogLines2OperationCompleted(object arg) {
            if ((this.FnGetPlogLines2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPlogLines2Completed(this, new FnGetPlogLines2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetSubPlogLines2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetSubPlogLines2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetSubPlogLines2(string plogNo, string initiativeNo, string pcNo) {
            object[] results = this.Invoke("FnGetSubPlogLines2", new object[] {
                        plogNo,
                        initiativeNo,
                        pcNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetSubPlogLines2Async(string plogNo, string initiativeNo, string pcNo) {
            this.FnGetSubPlogLines2Async(plogNo, initiativeNo, pcNo, null);
        }
        
        /// <remarks/>
        public void FnGetSubPlogLines2Async(string plogNo, string initiativeNo, string pcNo, object userState) {
            if ((this.FnGetSubPlogLines2OperationCompleted == null)) {
                this.FnGetSubPlogLines2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetSubPlogLines2OperationCompleted);
            }
            this.InvokeAsync("FnGetSubPlogLines2", new object[] {
                        plogNo,
                        initiativeNo,
                        pcNo}, this.FnGetSubPlogLines2OperationCompleted, userState);
        }
        
        private void OnFnGetSubPlogLines2OperationCompleted(object arg) {
            if ((this.FnGetSubPlogLines2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetSubPlogLines2Completed(this, new FnGetSubPlogLines2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestPlogLines2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestPlogLines2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestPlogLines2(string docNo, string strategyid, string personalscorecardid, string empNumber) {
            object[] results = this.Invoke("FnSuggestPlogLines2", new object[] {
                        docNo,
                        strategyid,
                        personalscorecardid,
                        empNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestPlogLines2Async(string docNo, string strategyid, string personalscorecardid, string empNumber) {
            this.FnSuggestPlogLines2Async(docNo, strategyid, personalscorecardid, empNumber, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogLines2Async(string docNo, string strategyid, string personalscorecardid, string empNumber, object userState) {
            if ((this.FnSuggestPlogLines2OperationCompleted == null)) {
                this.FnSuggestPlogLines2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogLines2OperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogLines2", new object[] {
                        docNo,
                        strategyid,
                        personalscorecardid,
                        empNumber}, this.FnSuggestPlogLines2OperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogLines2OperationCompleted(object arg) {
            if ((this.FnSuggestPlogLines2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogLines2Completed(this, new FnSuggestPlogLines2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestPlogandSubPlogData2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestPlogandSubPlogData2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSuggestPlogandSubPlogData2(string docNo) {
            this.Invoke("FnSuggestPlogandSubPlogData2", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FnSuggestPlogandSubPlogData2Async(string docNo) {
            this.FnSuggestPlogandSubPlogData2Async(docNo, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogandSubPlogData2Async(string docNo, object userState) {
            if ((this.FnSuggestPlogandSubPlogData2OperationCompleted == null)) {
                this.FnSuggestPlogandSubPlogData2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogandSubPlogData2OperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogandSubPlogData2", new object[] {
                        docNo}, this.FnSuggestPlogandSubPlogData2OperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogandSubPlogData2OperationCompleted(object arg) {
            if ((this.FnSuggestPlogandSubPlogData2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogandSubPlogData2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdatePerformanceTargetLinesDe" +
            "tails2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdatePerformanceTargetLinesDetails2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdatePerformanceTargetLinesDetails2(string docNo, int entryNumber, decimal agreedTarget, string comments) {
            object[] results = this.Invoke("FnUpdatePerformanceTargetLinesDetails2", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetails2Async(string docNo, int entryNumber, decimal agreedTarget, string comments) {
            this.FnUpdatePerformanceTargetLinesDetails2Async(docNo, entryNumber, agreedTarget, comments, null);
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetails2Async(string docNo, int entryNumber, decimal agreedTarget, string comments, object userState) {
            if ((this.FnUpdatePerformanceTargetLinesDetails2OperationCompleted == null)) {
                this.FnUpdatePerformanceTargetLinesDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePerformanceTargetLinesDetails2OperationCompleted);
            }
            this.InvokeAsync("FnUpdatePerformanceTargetLinesDetails2", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        comments}, this.FnUpdatePerformanceTargetLinesDetails2OperationCompleted, userState);
        }
        
        private void OnFnUpdatePerformanceTargetLinesDetails2OperationCompleted(object arg) {
            if ((this.FnUpdatePerformanceTargetLinesDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePerformanceTargetLinesDetails2Completed(this, new FnUpdatePerformanceTargetLinesDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemovePerformanceLogSubLine2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemovePerformanceLogSubLine2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemovePerformanceLogSubLine2(string docNo, string entryNumber) {
            object[] results = this.Invoke("FnRemovePerformanceLogSubLine2", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogSubLine2Async(string docNo, string entryNumber) {
            this.FnRemovePerformanceLogSubLine2Async(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogSubLine2Async(string docNo, string entryNumber, object userState) {
            if ((this.FnRemovePerformanceLogSubLine2OperationCompleted == null)) {
                this.FnRemovePerformanceLogSubLine2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemovePerformanceLogSubLine2OperationCompleted);
            }
            this.InvokeAsync("FnRemovePerformanceLogSubLine2", new object[] {
                        docNo,
                        entryNumber}, this.FnRemovePerformanceLogSubLine2OperationCompleted, userState);
        }
        
        private void OnFnRemovePerformanceLogSubLine2OperationCompleted(object arg) {
            if ((this.FnRemovePerformanceLogSubLine2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemovePerformanceLogSubLine2Completed(this, new FnRemovePerformanceLogSubLine2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemovePerformanceLogLine2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemovePerformanceLogLine2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemovePerformanceLogLine2(string docNo, int entryNumber) {
            object[] results = this.Invoke("FnRemovePerformanceLogLine2", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogLine2Async(string docNo, int entryNumber) {
            this.FnRemovePerformanceLogLine2Async(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogLine2Async(string docNo, int entryNumber, object userState) {
            if ((this.FnRemovePerformanceLogLine2OperationCompleted == null)) {
                this.FnRemovePerformanceLogLine2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemovePerformanceLogLine2OperationCompleted);
            }
            this.InvokeAsync("FnRemovePerformanceLogLine2", new object[] {
                        docNo,
                        entryNumber}, this.FnRemovePerformanceLogLine2OperationCompleted, userState);
        }
        
        private void OnFnRemovePerformanceLogLine2OperationCompleted(object arg) {
            if ((this.FnRemovePerformanceLogLine2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemovePerformanceLogLine2Completed(this, new FnRemovePerformanceLogLine2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertPlogSubActivities2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertPlogSubActivities2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPlogSubActivities2(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments) {
            object[] results = this.Invoke("FnInsertPlogSubActivities2", new object[] {
                        entryNo,
                        plogno,
                        initiativeno,
                        pcid,
                        achievedtarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPlogSubActivities2Async(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments) {
            this.FnInsertPlogSubActivities2Async(entryNo, plogno, initiativeno, pcid, achievedtarget, comments, null);
        }
        
        /// <remarks/>
        public void FnInsertPlogSubActivities2Async(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments, object userState) {
            if ((this.FnInsertPlogSubActivities2OperationCompleted == null)) {
                this.FnInsertPlogSubActivities2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPlogSubActivities2OperationCompleted);
            }
            this.InvokeAsync("FnInsertPlogSubActivities2", new object[] {
                        entryNo,
                        plogno,
                        initiativeno,
                        pcid,
                        achievedtarget,
                        comments}, this.FnInsertPlogSubActivities2OperationCompleted, userState);
        }
        
        private void OnFnInsertPlogSubActivities2OperationCompleted(object arg) {
            if ((this.FnInsertPlogSubActivities2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPlogSubActivities2Completed(this, new FnInsertPlogSubActivities2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendPlogApproval2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendPlogApproval2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPlogApproval2(string contractNo) {
            object[] results = this.Invoke("FnSendPlogApproval2", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPlogApproval2Async(string contractNo) {
            this.FnSendPlogApproval2Async(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSendPlogApproval2Async(string contractNo, object userState) {
            if ((this.FnSendPlogApproval2OperationCompleted == null)) {
                this.FnSendPlogApproval2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPlogApproval2OperationCompleted);
            }
            this.InvokeAsync("FnSendPlogApproval2", new object[] {
                        contractNo}, this.FnSendPlogApproval2OperationCompleted, userState);
        }
        
        private void OnFnSendPlogApproval2OperationCompleted(object arg) {
            if ((this.FnSendPlogApproval2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPlogApproval2Completed(this, new FnSendPlogApproval2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelPlogApproval2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelPlogApproval2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelPlogApproval2(string contractNo) {
            object[] results = this.Invoke("FnCancelPlogApproval2", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelPlogApproval2Async(string contractNo) {
            this.FnCancelPlogApproval2Async(contractNo, null);
        }
        
        /// <remarks/>
        public void FnCancelPlogApproval2Async(string contractNo, object userState) {
            if ((this.FnCancelPlogApproval2OperationCompleted == null)) {
                this.FnCancelPlogApproval2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelPlogApproval2OperationCompleted);
            }
            this.InvokeAsync("FnCancelPlogApproval2", new object[] {
                        contractNo}, this.FnCancelPlogApproval2OperationCompleted, userState);
        }
        
        private void OnFnCancelPlogApproval2OperationCompleted(object arg) {
            if ((this.FnCancelPlogApproval2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelPlogApproval2Completed(this, new FnCancelPlogApproval2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGeneratePlogReport2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGeneratePlogReport2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePlogReport2(string docNo) {
            object[] results = this.Invoke("FnGeneratePlogReport2", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePlogReport2Async(string docNo) {
            this.FnGeneratePlogReport2Async(docNo, null);
        }
        
        /// <remarks/>
        public void FnGeneratePlogReport2Async(string docNo, object userState) {
            if ((this.FnGeneratePlogReport2OperationCompleted == null)) {
                this.FnGeneratePlogReport2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePlogReport2OperationCompleted);
            }
            this.InvokeAsync("FnGeneratePlogReport2", new object[] {
                        docNo}, this.FnGeneratePlogReport2OperationCompleted, userState);
        }
        
        private void OnFnGeneratePlogReport2OperationCompleted(object arg) {
            if ((this.FnGeneratePlogReport2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePlogReport2Completed(this, new FnGeneratePlogReport2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedAddPLogCategorie" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedAddPLogCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedAddPLogCategories(string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedAddPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedAddPLogCategoriesAsync(string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedAddPLogCategoriesAsync(plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedAddPLogCategoriesAsync(string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedAddPLogCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedAddPLogCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedAddPLogCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedAddPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedAddPLogCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedAddPLogCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedAddPLogCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedAddPLogCategoriesCompleted(this, new FnSubmitSelectedAddPLogCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedJDPLogCategories" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedJDPLogCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedJDPLogCategories(string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedJDPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedJDPLogCategoriesAsync(string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedJDPLogCategoriesAsync(plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedJDPLogCategoriesAsync(string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedJDPLogCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedJDPLogCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedJDPLogCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedJDPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedJDPLogCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedJDPLogCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedJDPLogCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedJDPLogCategoriesCompleted(this, new FnSubmitSelectedJDPLogCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedPLogCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedPLogCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedPLogCategories(string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategoriesAsync(string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedPLogCategoriesAsync(plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategoriesAsync(string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedPLogCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedPLogCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedPLogCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedPLogCategories", new object[] {
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedPLogCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedPLogCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedPLogCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedPLogCategoriesCompleted(this, new FnSubmitSelectedPLogCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewStandardAppraisal(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            object[] results = this.Invoke("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            this.FnNewStandardAppraisalAsync(docNo, empNo, strategicPlan, pmp, tasks, supervisor, description, personalSC, null);
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC, object userState) {
            if ((this.FnNewStandardAppraisalOperationCompleted == null)) {
                this.FnNewStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC}, this.FnNewStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnNewStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnNewStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewStandardAppraisalCompleted(this, new FnNewStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLoadCompetencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLoadCompetencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLoadCompetencies(string docNo) {
            object[] results = this.Invoke("FnLoadCompetencies", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo) {
            this.FnLoadCompetenciesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo, object userState) {
            if ((this.FnLoadCompetenciesOperationCompleted == null)) {
                this.FnLoadCompetenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoadCompetenciesOperationCompleted);
            }
            this.InvokeAsync("FnLoadCompetencies", new object[] {
                        docNo}, this.FnLoadCompetenciesOperationCompleted, userState);
        }
        
        private void OnFnLoadCompetenciesOperationCompleted(object arg) {
            if ((this.FnLoadCompetenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoadCompetenciesCompleted(this, new FnLoadCompetenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisal(string docNo) {
            object[] results = this.Invoke("FnSubmitStandardAppraisal", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalAsync(string docNo) {
            this.FnSubmitStandardAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalAsync(string docNo, object userState) {
            if ((this.FnSubmitStandardAppraisalOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisal", new object[] {
                        docNo}, this.FnSubmitStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalCompleted(this, new FnSubmitStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAppraisalSuggestObjectivesOutc" +
            "omes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAppraisalSuggestObjectivesOutcomes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAppraisalSuggestObjectivesOutcomes(string docNo) {
            object[] results = this.Invoke("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo) {
            this.FnAppraisalSuggestObjectivesOutcomesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo, object userState) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted == null)) {
                this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted);
            }
            this.InvokeAsync("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo}, this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted, userState);
        }
        
        private void OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted(object arg) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAppraisalSuggestObjectivesOutcomesCompleted(this, new FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateStandardAppraisalRepor" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateStandardAppraisalReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateStandardAppraisalReport(string docNo) {
            object[] results = this.Invoke("FnGenerateStandardAppraisalReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateStandardAppraisalReportAsync(string docNo) {
            this.FnGenerateStandardAppraisalReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateStandardAppraisalReportAsync(string docNo, object userState) {
            if ((this.FnGenerateStandardAppraisalReportOperationCompleted == null)) {
                this.FnGenerateStandardAppraisalReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateStandardAppraisalReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateStandardAppraisalReport", new object[] {
                        docNo}, this.FnGenerateStandardAppraisalReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateStandardAppraisalReportOperationCompleted(object arg) {
            if ((this.FnGenerateStandardAppraisalReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateStandardAppraisalReportCompleted(this, new FnGenerateStandardAppraisalReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddInnovationResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddInnovationResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddInnovationResponse(string applicationNo, string innovationNo, string category, string department, string description, string executiveSummery, string employeeNo) {
            object[] results = this.Invoke("FnAddInnovationResponse", new object[] {
                        applicationNo,
                        innovationNo,
                        category,
                        department,
                        description,
                        executiveSummery,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddInnovationResponseAsync(string applicationNo, string innovationNo, string category, string department, string description, string executiveSummery, string employeeNo) {
            this.FnAddInnovationResponseAsync(applicationNo, innovationNo, category, department, description, executiveSummery, employeeNo, null);
        }
        
        /// <remarks/>
        public void FnAddInnovationResponseAsync(string applicationNo, string innovationNo, string category, string department, string description, string executiveSummery, string employeeNo, object userState) {
            if ((this.FnAddInnovationResponseOperationCompleted == null)) {
                this.FnAddInnovationResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddInnovationResponseOperationCompleted);
            }
            this.InvokeAsync("FnAddInnovationResponse", new object[] {
                        applicationNo,
                        innovationNo,
                        category,
                        department,
                        description,
                        executiveSummery,
                        employeeNo}, this.FnAddInnovationResponseOperationCompleted, userState);
        }
        
        private void OnFnAddInnovationResponseOperationCompleted(object arg) {
            if ((this.FnAddInnovationResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddInnovationResponseCompleted(this, new FnAddInnovationResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddInnovationResponseLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddInnovationResponseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddInnovationResponseLines(string applicationNo, string description, string employeeNo) {
            object[] results = this.Invoke("FnAddInnovationResponseLines", new object[] {
                        applicationNo,
                        description,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddInnovationResponseLinesAsync(string applicationNo, string description, string employeeNo) {
            this.FnAddInnovationResponseLinesAsync(applicationNo, description, employeeNo, null);
        }
        
        /// <remarks/>
        public void FnAddInnovationResponseLinesAsync(string applicationNo, string description, string employeeNo, object userState) {
            if ((this.FnAddInnovationResponseLinesOperationCompleted == null)) {
                this.FnAddInnovationResponseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddInnovationResponseLinesOperationCompleted);
            }
            this.InvokeAsync("FnAddInnovationResponseLines", new object[] {
                        applicationNo,
                        description,
                        employeeNo}, this.FnAddInnovationResponseLinesOperationCompleted, userState);
        }
        
        private void OnFnAddInnovationResponseLinesOperationCompleted(object arg) {
            if ((this.FnAddInnovationResponseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddInnovationResponseLinesCompleted(this, new FnAddInnovationResponseLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddInnovationObjectiveResponse" +
            "Lines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddInnovationObjectiveResponseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddInnovationObjectiveResponseLines(string applicationNo, string description, string employeeNo) {
            object[] results = this.Invoke("FnAddInnovationObjectiveResponseLines", new object[] {
                        applicationNo,
                        description,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddInnovationObjectiveResponseLinesAsync(string applicationNo, string description, string employeeNo) {
            this.FnAddInnovationObjectiveResponseLinesAsync(applicationNo, description, employeeNo, null);
        }
        
        /// <remarks/>
        public void FnAddInnovationObjectiveResponseLinesAsync(string applicationNo, string description, string employeeNo, object userState) {
            if ((this.FnAddInnovationObjectiveResponseLinesOperationCompleted == null)) {
                this.FnAddInnovationObjectiveResponseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddInnovationObjectiveResponseLinesOperationCompleted);
            }
            this.InvokeAsync("FnAddInnovationObjectiveResponseLines", new object[] {
                        applicationNo,
                        description,
                        employeeNo}, this.FnAddInnovationObjectiveResponseLinesOperationCompleted, userState);
        }
        
        private void OnFnAddInnovationObjectiveResponseLinesOperationCompleted(object arg) {
            if ((this.FnAddInnovationObjectiveResponseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddInnovationObjectiveResponseLinesCompleted(this, new FnAddInnovationObjectiveResponseLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddInnovationAdditionalRespons" +
            "eLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddInnovationAdditionalResponseLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddInnovationAdditionalResponseLines(string applicationNo, string description, string employeeNo) {
            object[] results = this.Invoke("FnAddInnovationAdditionalResponseLines", new object[] {
                        applicationNo,
                        description,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddInnovationAdditionalResponseLinesAsync(string applicationNo, string description, string employeeNo) {
            this.FnAddInnovationAdditionalResponseLinesAsync(applicationNo, description, employeeNo, null);
        }
        
        /// <remarks/>
        public void FnAddInnovationAdditionalResponseLinesAsync(string applicationNo, string description, string employeeNo, object userState) {
            if ((this.FnAddInnovationAdditionalResponseLinesOperationCompleted == null)) {
                this.FnAddInnovationAdditionalResponseLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddInnovationAdditionalResponseLinesOperationCompleted);
            }
            this.InvokeAsync("FnAddInnovationAdditionalResponseLines", new object[] {
                        applicationNo,
                        description,
                        employeeNo}, this.FnAddInnovationAdditionalResponseLinesOperationCompleted, userState);
        }
        
        private void OnFnAddInnovationAdditionalResponseLinesOperationCompleted(object arg) {
            if ((this.FnAddInnovationAdditionalResponseLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddInnovationAdditionalResponseLinesCompleted(this, new FnAddInnovationAdditionalResponseLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditInnovationOverview", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditInnovationOverview_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditInnovationOverview(string applicationNo, string description, string employeeNo, int lineNo) {
            object[] results = this.Invoke("EditInnovationOverview", new object[] {
                        applicationNo,
                        description,
                        employeeNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditInnovationOverviewAsync(string applicationNo, string description, string employeeNo, int lineNo) {
            this.EditInnovationOverviewAsync(applicationNo, description, employeeNo, lineNo, null);
        }
        
        /// <remarks/>
        public void EditInnovationOverviewAsync(string applicationNo, string description, string employeeNo, int lineNo, object userState) {
            if ((this.EditInnovationOverviewOperationCompleted == null)) {
                this.EditInnovationOverviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditInnovationOverviewOperationCompleted);
            }
            this.InvokeAsync("EditInnovationOverview", new object[] {
                        applicationNo,
                        description,
                        employeeNo,
                        lineNo}, this.EditInnovationOverviewOperationCompleted, userState);
        }
        
        private void OnEditInnovationOverviewOperationCompleted(object arg) {
            if ((this.EditInnovationOverviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditInnovationOverviewCompleted(this, new EditInnovationOverviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditInnovationObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditInnovationObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditInnovationObjective(string applicationNo, string description, string employeeNo) {
            object[] results = this.Invoke("EditInnovationObjective", new object[] {
                        applicationNo,
                        description,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditInnovationObjectiveAsync(string applicationNo, string description, string employeeNo) {
            this.EditInnovationObjectiveAsync(applicationNo, description, employeeNo, null);
        }
        
        /// <remarks/>
        public void EditInnovationObjectiveAsync(string applicationNo, string description, string employeeNo, object userState) {
            if ((this.EditInnovationObjectiveOperationCompleted == null)) {
                this.EditInnovationObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditInnovationObjectiveOperationCompleted);
            }
            this.InvokeAsync("EditInnovationObjective", new object[] {
                        applicationNo,
                        description,
                        employeeNo}, this.EditInnovationObjectiveOperationCompleted, userState);
        }
        
        private void OnEditInnovationObjectiveOperationCompleted(object arg) {
            if ((this.EditInnovationObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditInnovationObjectiveCompleted(this, new EditInnovationObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditInnovationAdditionNotes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditInnovationAdditionNotes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditInnovationAdditionNotes(string applicationNo, string description, string employeeNo, int lineNo) {
            object[] results = this.Invoke("EditInnovationAdditionNotes", new object[] {
                        applicationNo,
                        description,
                        employeeNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditInnovationAdditionNotesAsync(string applicationNo, string description, string employeeNo, int lineNo) {
            this.EditInnovationAdditionNotesAsync(applicationNo, description, employeeNo, lineNo, null);
        }
        
        /// <remarks/>
        public void EditInnovationAdditionNotesAsync(string applicationNo, string description, string employeeNo, int lineNo, object userState) {
            if ((this.EditInnovationAdditionNotesOperationCompleted == null)) {
                this.EditInnovationAdditionNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditInnovationAdditionNotesOperationCompleted);
            }
            this.InvokeAsync("EditInnovationAdditionNotes", new object[] {
                        applicationNo,
                        description,
                        employeeNo,
                        lineNo}, this.EditInnovationAdditionNotesOperationCompleted, userState);
        }
        
        private void OnEditInnovationAdditionNotesOperationCompleted(object arg) {
            if ((this.EditInnovationAdditionNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditInnovationAdditionNotesCompleted(this, new EditInnovationAdditionNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteInnovationResponseLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteInnovationResponseLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteInnovationResponseLine(string employeeNo, string applicationNo, int lineNo) {
            object[] results = this.Invoke("DeleteInnovationResponseLine", new object[] {
                        employeeNo,
                        applicationNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInnovationResponseLineAsync(string employeeNo, string applicationNo, int lineNo) {
            this.DeleteInnovationResponseLineAsync(employeeNo, applicationNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteInnovationResponseLineAsync(string employeeNo, string applicationNo, int lineNo, object userState) {
            if ((this.DeleteInnovationResponseLineOperationCompleted == null)) {
                this.DeleteInnovationResponseLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInnovationResponseLineOperationCompleted);
            }
            this.InvokeAsync("DeleteInnovationResponseLine", new object[] {
                        employeeNo,
                        applicationNo,
                        lineNo}, this.DeleteInnovationResponseLineOperationCompleted, userState);
        }
        
        private void OnDeleteInnovationResponseLineOperationCompleted(object arg) {
            if ((this.DeleteInnovationResponseLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInnovationResponseLineCompleted(this, new DeleteInnovationResponseLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateInnovationReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateInnovationReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateInnovationReport(string applicationNo) {
            object[] results = this.Invoke("GenerateInnovationReport", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateInnovationReportAsync(string applicationNo) {
            this.GenerateInnovationReportAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void GenerateInnovationReportAsync(string applicationNo, object userState) {
            if ((this.GenerateInnovationReportOperationCompleted == null)) {
                this.GenerateInnovationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateInnovationReportOperationCompleted);
            }
            this.InvokeAsync("GenerateInnovationReport", new object[] {
                        applicationNo}, this.GenerateInnovationReportOperationCompleted, userState);
        }
        
        private void OnGenerateInnovationReportOperationCompleted(object arg) {
            if ((this.GenerateInnovationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateInnovationReportCompleted(this, new GenerateInnovationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitResponse(string applicationNo) {
            object[] results = this.Invoke("FnSubmitResponse", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitResponseAsync(string applicationNo) {
            this.FnSubmitResponseAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitResponseAsync(string applicationNo, object userState) {
            if ((this.FnSubmitResponseOperationCompleted == null)) {
                this.FnSubmitResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitResponseOperationCompleted);
            }
            this.InvokeAsync("FnSubmitResponse", new object[] {
                        applicationNo}, this.FnSubmitResponseOperationCompleted, userState);
        }
        
        private void OnFnSubmitResponseOperationCompleted(object arg) {
            if ((this.FnSubmitResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitResponseCompleted(this, new FnSubmitResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateRMReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateRMReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRMReport() {
            object[] results = this.Invoke("GenerateRMReport", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRMReportAsync() {
            this.GenerateRMReportAsync(null);
        }
        
        /// <remarks/>
        public void GenerateRMReportAsync(object userState) {
            if ((this.GenerateRMReportOperationCompleted == null)) {
                this.GenerateRMReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRMReportOperationCompleted);
            }
            this.InvokeAsync("GenerateRMReport", new object[0], this.GenerateRMReportOperationCompleted, userState);
        }
        
        private void OnGenerateRMReportOperationCompleted(object arg) {
            if ((this.GenerateRMReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRMReportCompleted(this, new GenerateRMReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateManagementPlanSummery", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateManagementPlanSummery_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateManagementPlanSummery(string documentNo) {
            object[] results = this.Invoke("GenerateManagementPlanSummery", new object[] {
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateManagementPlanSummeryAsync(string documentNo) {
            this.GenerateManagementPlanSummeryAsync(documentNo, null);
        }
        
        /// <remarks/>
        public void GenerateManagementPlanSummeryAsync(string documentNo, object userState) {
            if ((this.GenerateManagementPlanSummeryOperationCompleted == null)) {
                this.GenerateManagementPlanSummeryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateManagementPlanSummeryOperationCompleted);
            }
            this.InvokeAsync("GenerateManagementPlanSummery", new object[] {
                        documentNo}, this.GenerateManagementPlanSummeryOperationCompleted, userState);
        }
        
        private void OnGenerateManagementPlanSummeryOperationCompleted(object arg) {
            if ((this.GenerateManagementPlanSummeryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateManagementPlanSummeryCompleted(this, new GenerateManagementPlanSummeryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateRiskFrameworkTest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateRiskFrameworkTest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRiskFrameworkTest(int documentType, string documentNo) {
            object[] results = this.Invoke("GenerateRiskFrameworkTest", new object[] {
                        documentType,
                        documentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRiskFrameworkTestAsync(int documentType, string documentNo) {
            this.GenerateRiskFrameworkTestAsync(documentType, documentNo, null);
        }
        
        /// <remarks/>
        public void GenerateRiskFrameworkTestAsync(int documentType, string documentNo, object userState) {
            if ((this.GenerateRiskFrameworkTestOperationCompleted == null)) {
                this.GenerateRiskFrameworkTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRiskFrameworkTestOperationCompleted);
            }
            this.InvokeAsync("GenerateRiskFrameworkTest", new object[] {
                        documentType,
                        documentNo}, this.GenerateRiskFrameworkTestOperationCompleted, userState);
        }
        
        private void OnGenerateRiskFrameworkTestOperationCompleted(object arg) {
            if ((this.GenerateRiskFrameworkTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRiskFrameworkTestCompleted(this, new GenerateRiskFrameworkTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SalaryAdvanceApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SalaryAdvanceApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SalaryAdvanceApplication(string applicationNo, string employeeNo, string divisionCode, string branchCode, decimal salaryAdvanceAmount, int monthsDeducted, string purpose, string recoveryStartmonth, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime recoveryStartDate) {
            object[] results = this.Invoke("SalaryAdvanceApplication", new object[] {
                        applicationNo,
                        employeeNo,
                        divisionCode,
                        branchCode,
                        salaryAdvanceAmount,
                        monthsDeducted,
                        purpose,
                        recoveryStartmonth,
                        recoveryStartDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SalaryAdvanceApplicationAsync(string applicationNo, string employeeNo, string divisionCode, string branchCode, decimal salaryAdvanceAmount, int monthsDeducted, string purpose, string recoveryStartmonth, System.DateTime recoveryStartDate) {
            this.SalaryAdvanceApplicationAsync(applicationNo, employeeNo, divisionCode, branchCode, salaryAdvanceAmount, monthsDeducted, purpose, recoveryStartmonth, recoveryStartDate, null);
        }
        
        /// <remarks/>
        public void SalaryAdvanceApplicationAsync(string applicationNo, string employeeNo, string divisionCode, string branchCode, decimal salaryAdvanceAmount, int monthsDeducted, string purpose, string recoveryStartmonth, System.DateTime recoveryStartDate, object userState) {
            if ((this.SalaryAdvanceApplicationOperationCompleted == null)) {
                this.SalaryAdvanceApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalaryAdvanceApplicationOperationCompleted);
            }
            this.InvokeAsync("SalaryAdvanceApplication", new object[] {
                        applicationNo,
                        employeeNo,
                        divisionCode,
                        branchCode,
                        salaryAdvanceAmount,
                        monthsDeducted,
                        purpose,
                        recoveryStartmonth,
                        recoveryStartDate}, this.SalaryAdvanceApplicationOperationCompleted, userState);
        }
        
        private void OnSalaryAdvanceApplicationOperationCompleted(object arg) {
            if ((this.SalaryAdvanceApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalaryAdvanceApplicationCompleted(this, new SalaryAdvanceApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendSalaryAdvanceApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendSalaryAdvanceApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendSalaryAdvanceApproval(string employeeNo, string applicationNo) {
            object[] results = this.Invoke("SendSalaryAdvanceApproval", new object[] {
                        employeeNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSalaryAdvanceApprovalAsync(string employeeNo, string applicationNo) {
            this.SendSalaryAdvanceApprovalAsync(employeeNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void SendSalaryAdvanceApprovalAsync(string employeeNo, string applicationNo, object userState) {
            if ((this.SendSalaryAdvanceApprovalOperationCompleted == null)) {
                this.SendSalaryAdvanceApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSalaryAdvanceApprovalOperationCompleted);
            }
            this.InvokeAsync("SendSalaryAdvanceApproval", new object[] {
                        employeeNo,
                        applicationNo}, this.SendSalaryAdvanceApprovalOperationCompleted, userState);
        }
        
        private void OnSendSalaryAdvanceApprovalOperationCompleted(object arg) {
            if ((this.SendSalaryAdvanceApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSalaryAdvanceApprovalCompleted(this, new SendSalaryAdvanceApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CarLoanApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CarLoanApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CarLoanApplication(string applicationNo, string employeeNo, string divisionCode, string branchCode, decimal carloanAmount, int monthsDeducted, string purpose, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime recoveryStartmonth, string loanVendor) {
            object[] results = this.Invoke("CarLoanApplication", new object[] {
                        applicationNo,
                        employeeNo,
                        divisionCode,
                        branchCode,
                        carloanAmount,
                        monthsDeducted,
                        purpose,
                        recoveryStartmonth,
                        loanVendor});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CarLoanApplicationAsync(string applicationNo, string employeeNo, string divisionCode, string branchCode, decimal carloanAmount, int monthsDeducted, string purpose, System.DateTime recoveryStartmonth, string loanVendor) {
            this.CarLoanApplicationAsync(applicationNo, employeeNo, divisionCode, branchCode, carloanAmount, monthsDeducted, purpose, recoveryStartmonth, loanVendor, null);
        }
        
        /// <remarks/>
        public void CarLoanApplicationAsync(string applicationNo, string employeeNo, string divisionCode, string branchCode, decimal carloanAmount, int monthsDeducted, string purpose, System.DateTime recoveryStartmonth, string loanVendor, object userState) {
            if ((this.CarLoanApplicationOperationCompleted == null)) {
                this.CarLoanApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCarLoanApplicationOperationCompleted);
            }
            this.InvokeAsync("CarLoanApplication", new object[] {
                        applicationNo,
                        employeeNo,
                        divisionCode,
                        branchCode,
                        carloanAmount,
                        monthsDeducted,
                        purpose,
                        recoveryStartmonth,
                        loanVendor}, this.CarLoanApplicationOperationCompleted, userState);
        }
        
        private void OnCarLoanApplicationOperationCompleted(object arg) {
            if ((this.CarLoanApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CarLoanApplicationCompleted(this, new CarLoanApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendCarLoanApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendCarLoanApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendCarLoanApproval(string employeeNo, string applicationNo) {
            object[] results = this.Invoke("SendCarLoanApproval", new object[] {
                        employeeNo,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendCarLoanApprovalAsync(string employeeNo, string applicationNo) {
            this.SendCarLoanApprovalAsync(employeeNo, applicationNo, null);
        }
        
        /// <remarks/>
        public void SendCarLoanApprovalAsync(string employeeNo, string applicationNo, object userState) {
            if ((this.SendCarLoanApprovalOperationCompleted == null)) {
                this.SendCarLoanApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCarLoanApprovalOperationCompleted);
            }
            this.InvokeAsync("SendCarLoanApproval", new object[] {
                        employeeNo,
                        applicationNo}, this.SendCarLoanApprovalOperationCompleted, userState);
        }
        
        private void OnSendCarLoanApprovalOperationCompleted(object arg) {
            if ((this.SendCarLoanApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCarLoanApprovalCompleted(this, new SendCarLoanApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStudentResultSlip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStudentResultSlip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStudentResultSlip(string studentRegNo, string examSittingId) {
            object[] results = this.Invoke("SendStudentResultSlip", new object[] {
                        studentRegNo,
                        examSittingId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStudentResultSlipAsync(string studentRegNo, string examSittingId) {
            this.SendStudentResultSlipAsync(studentRegNo, examSittingId, null);
        }
        
        /// <remarks/>
        public void SendStudentResultSlipAsync(string studentRegNo, string examSittingId, object userState) {
            if ((this.SendStudentResultSlipOperationCompleted == null)) {
                this.SendStudentResultSlipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStudentResultSlipOperationCompleted);
            }
            this.InvokeAsync("SendStudentResultSlip", new object[] {
                        studentRegNo,
                        examSittingId}, this.SendStudentResultSlipOperationCompleted, userState);
        }
        
        private void OnSendStudentResultSlipOperationCompleted(object arg) {
            if ((this.SendStudentResultSlipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStudentResultSlipCompleted(this, new SendStudentResultSlipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateRiskStatusReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateRiskStatusReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRiskStatusReport(string applicationNo, string employeeNo, int riskRegisterType, string riskMngt) {
            object[] results = this.Invoke("CreateRiskStatusReport", new object[] {
                        applicationNo,
                        employeeNo,
                        riskRegisterType,
                        riskMngt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRiskStatusReportAsync(string applicationNo, string employeeNo, int riskRegisterType, string riskMngt) {
            this.CreateRiskStatusReportAsync(applicationNo, employeeNo, riskRegisterType, riskMngt, null);
        }
        
        /// <remarks/>
        public void CreateRiskStatusReportAsync(string applicationNo, string employeeNo, int riskRegisterType, string riskMngt, object userState) {
            if ((this.CreateRiskStatusReportOperationCompleted == null)) {
                this.CreateRiskStatusReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRiskStatusReportOperationCompleted);
            }
            this.InvokeAsync("CreateRiskStatusReport", new object[] {
                        applicationNo,
                        employeeNo,
                        riskRegisterType,
                        riskMngt}, this.CreateRiskStatusReportOperationCompleted, userState);
        }
        
        private void OnCreateRiskStatusReportOperationCompleted(object arg) {
            if ((this.CreateRiskStatusReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRiskStatusReportCompleted(this, new CreateRiskStatusReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CloseRisk", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CloseRisk_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CloseRisk(string employeeNo, string applicationNo, int riskNo) {
            object[] results = this.Invoke("CloseRisk", new object[] {
                        employeeNo,
                        applicationNo,
                        riskNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseRiskAsync(string employeeNo, string applicationNo, int riskNo) {
            this.CloseRiskAsync(employeeNo, applicationNo, riskNo, null);
        }
        
        /// <remarks/>
        public void CloseRiskAsync(string employeeNo, string applicationNo, int riskNo, object userState) {
            if ((this.CloseRiskOperationCompleted == null)) {
                this.CloseRiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseRiskOperationCompleted);
            }
            this.InvokeAsync("CloseRisk", new object[] {
                        employeeNo,
                        applicationNo,
                        riskNo}, this.CloseRiskOperationCompleted, userState);
        }
        
        private void OnCloseRiskOperationCompleted(object arg) {
            if ((this.CloseRiskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseRiskCompleted(this, new CloseRiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddRiskResponse", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddRiskResponse_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddRiskResponse(string employeeNo, string applicationNo, string docType, int riskid, string mitigation, string actionTaken, string officer) {
            object[] results = this.Invoke("AddRiskResponse", new object[] {
                        employeeNo,
                        applicationNo,
                        docType,
                        riskid,
                        mitigation,
                        actionTaken,
                        officer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRiskResponseAsync(string employeeNo, string applicationNo, string docType, int riskid, string mitigation, string actionTaken, string officer) {
            this.AddRiskResponseAsync(employeeNo, applicationNo, docType, riskid, mitigation, actionTaken, officer, null);
        }
        
        /// <remarks/>
        public void AddRiskResponseAsync(string employeeNo, string applicationNo, string docType, int riskid, string mitigation, string actionTaken, string officer, object userState) {
            if ((this.AddRiskResponseOperationCompleted == null)) {
                this.AddRiskResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRiskResponseOperationCompleted);
            }
            this.InvokeAsync("AddRiskResponse", new object[] {
                        employeeNo,
                        applicationNo,
                        docType,
                        riskid,
                        mitigation,
                        actionTaken,
                        officer}, this.AddRiskResponseOperationCompleted, userState);
        }
        
        private void OnAddRiskResponseOperationCompleted(object arg) {
            if ((this.AddRiskResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRiskResponseCompleted(this, new AddRiskResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddRiskRegister", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddRiskRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddRiskRegister(string applicationNo, string riskCategory, string stratPillars, string risKDescription, string riskLikelihoodCode, decimal riskLikelihoodActualRating, string riskImpactCode, decimal riskImpactActualRating, int riskImpactType, string riskAppetite, string riskImpactCodes, string genRiskRespStrat) {
            object[] results = this.Invoke("FnAddRiskRegister", new object[] {
                        applicationNo,
                        riskCategory,
                        stratPillars,
                        risKDescription,
                        riskLikelihoodCode,
                        riskLikelihoodActualRating,
                        riskImpactCode,
                        riskImpactActualRating,
                        riskImpactType,
                        riskAppetite,
                        riskImpactCodes,
                        genRiskRespStrat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddRiskRegisterAsync(string applicationNo, string riskCategory, string stratPillars, string risKDescription, string riskLikelihoodCode, decimal riskLikelihoodActualRating, string riskImpactCode, decimal riskImpactActualRating, int riskImpactType, string riskAppetite, string riskImpactCodes, string genRiskRespStrat) {
            this.FnAddRiskRegisterAsync(applicationNo, riskCategory, stratPillars, risKDescription, riskLikelihoodCode, riskLikelihoodActualRating, riskImpactCode, riskImpactActualRating, riskImpactType, riskAppetite, riskImpactCodes, genRiskRespStrat, null);
        }
        
        /// <remarks/>
        public void FnAddRiskRegisterAsync(string applicationNo, string riskCategory, string stratPillars, string risKDescription, string riskLikelihoodCode, decimal riskLikelihoodActualRating, string riskImpactCode, decimal riskImpactActualRating, int riskImpactType, string riskAppetite, string riskImpactCodes, string genRiskRespStrat, object userState) {
            if ((this.FnAddRiskRegisterOperationCompleted == null)) {
                this.FnAddRiskRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddRiskRegisterOperationCompleted);
            }
            this.InvokeAsync("FnAddRiskRegister", new object[] {
                        applicationNo,
                        riskCategory,
                        stratPillars,
                        risKDescription,
                        riskLikelihoodCode,
                        riskLikelihoodActualRating,
                        riskImpactCode,
                        riskImpactActualRating,
                        riskImpactType,
                        riskAppetite,
                        riskImpactCodes,
                        genRiskRespStrat}, this.FnAddRiskRegisterOperationCompleted, userState);
        }
        
        private void OnFnAddRiskRegisterOperationCompleted(object arg) {
            if ((this.FnAddRiskRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddRiskRegisterCompleted(this, new FnAddRiskRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateRiskRegisterDivision", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateRiskRegisterDivision_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRiskRegisterDivision(string applicationNo, string divisonCode, string csp, string consolidated, string yearcode, string officer) {
            object[] results = this.Invoke("CreateRiskRegisterDivision", new object[] {
                        applicationNo,
                        divisonCode,
                        csp,
                        consolidated,
                        yearcode,
                        officer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRiskRegisterDivisionAsync(string applicationNo, string divisonCode, string csp, string consolidated, string yearcode, string officer) {
            this.CreateRiskRegisterDivisionAsync(applicationNo, divisonCode, csp, consolidated, yearcode, officer, null);
        }
        
        /// <remarks/>
        public void CreateRiskRegisterDivisionAsync(string applicationNo, string divisonCode, string csp, string consolidated, string yearcode, string officer, object userState) {
            if ((this.CreateRiskRegisterDivisionOperationCompleted == null)) {
                this.CreateRiskRegisterDivisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRiskRegisterDivisionOperationCompleted);
            }
            this.InvokeAsync("CreateRiskRegisterDivision", new object[] {
                        applicationNo,
                        divisonCode,
                        csp,
                        consolidated,
                        yearcode,
                        officer}, this.CreateRiskRegisterDivisionOperationCompleted, userState);
        }
        
        private void OnCreateRiskRegisterDivisionOperationCompleted(object arg) {
            if ((this.CreateRiskRegisterDivisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRiskRegisterDivisionCompleted(this, new CreateRiskRegisterDivisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:PostDivisionRegister", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="PostDivisionRegister_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PostDivisionRegister(string applicationNo) {
            object[] results = this.Invoke("PostDivisionRegister", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostDivisionRegisterAsync(string applicationNo) {
            this.PostDivisionRegisterAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void PostDivisionRegisterAsync(string applicationNo, object userState) {
            if ((this.PostDivisionRegisterOperationCompleted == null)) {
                this.PostDivisionRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostDivisionRegisterOperationCompleted);
            }
            this.InvokeAsync("PostDivisionRegister", new object[] {
                        applicationNo}, this.PostDivisionRegisterOperationCompleted, userState);
        }
        
        private void OnPostDivisionRegisterOperationCompleted(object arg) {
            if ((this.PostDivisionRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostDivisionRegisterCompleted(this, new PostDivisionRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddRiskOwnership", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddRiskOwnership_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddRiskOwnership(string applicationNo, int riskNo, string responsibilityCenter, string officer) {
            object[] results = this.Invoke("FnAddRiskOwnership", new object[] {
                        applicationNo,
                        riskNo,
                        responsibilityCenter,
                        officer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddRiskOwnershipAsync(string applicationNo, int riskNo, string responsibilityCenter, string officer) {
            this.FnAddRiskOwnershipAsync(applicationNo, riskNo, responsibilityCenter, officer, null);
        }
        
        /// <remarks/>
        public void FnAddRiskOwnershipAsync(string applicationNo, int riskNo, string responsibilityCenter, string officer, object userState) {
            if ((this.FnAddRiskOwnershipOperationCompleted == null)) {
                this.FnAddRiskOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddRiskOwnershipOperationCompleted);
            }
            this.InvokeAsync("FnAddRiskOwnership", new object[] {
                        applicationNo,
                        riskNo,
                        responsibilityCenter,
                        officer}, this.FnAddRiskOwnershipOperationCompleted, userState);
        }
        
        private void OnFnAddRiskOwnershipOperationCompleted(object arg) {
            if ((this.FnAddRiskOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddRiskOwnershipCompleted(this, new FnAddRiskOwnershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddRiskMitigation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddRiskMitigation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddRiskMitigation(string applicationNo, int riskNo, string mitigationStrat, string actionTaken, string officer, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dueDate) {
            object[] results = this.Invoke("FnAddRiskMitigation", new object[] {
                        applicationNo,
                        riskNo,
                        mitigationStrat,
                        actionTaken,
                        officer,
                        dueDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddRiskMitigationAsync(string applicationNo, int riskNo, string mitigationStrat, string actionTaken, string officer, System.DateTime dueDate) {
            this.FnAddRiskMitigationAsync(applicationNo, riskNo, mitigationStrat, actionTaken, officer, dueDate, null);
        }
        
        /// <remarks/>
        public void FnAddRiskMitigationAsync(string applicationNo, int riskNo, string mitigationStrat, string actionTaken, string officer, System.DateTime dueDate, object userState) {
            if ((this.FnAddRiskMitigationOperationCompleted == null)) {
                this.FnAddRiskMitigationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddRiskMitigationOperationCompleted);
            }
            this.InvokeAsync("FnAddRiskMitigation", new object[] {
                        applicationNo,
                        riskNo,
                        mitigationStrat,
                        actionTaken,
                        officer,
                        dueDate}, this.FnAddRiskMitigationOperationCompleted, userState);
        }
        
        private void OnFnAddRiskMitigationOperationCompleted(object arg) {
            if ((this.FnAddRiskMitigationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddRiskMitigationCompleted(this, new FnAddRiskMitigationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRisk", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRisk_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRisk(string requisitionNo, int lineNo) {
            object[] results = this.Invoke("DeleteRisk", new object[] {
                        requisitionNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRiskAsync(string requisitionNo, int lineNo) {
            this.DeleteRiskAsync(requisitionNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteRiskAsync(string requisitionNo, int lineNo, object userState) {
            if ((this.DeleteRiskOperationCompleted == null)) {
                this.DeleteRiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRiskOperationCompleted);
            }
            this.InvokeAsync("DeleteRisk", new object[] {
                        requisitionNo,
                        lineNo}, this.DeleteRiskOperationCompleted, userState);
        }
        
        private void OnDeleteRiskOperationCompleted(object arg) {
            if ((this.DeleteRiskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRiskCompleted(this, new DeleteRiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPassword(string employeeNumbera45idNumber) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        employeeNumbera45idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber) {
            this.ResetPasswordAsync(employeeNumbera45idNumber, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        employeeNumbera45idNumber}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:LeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="LeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LeaveApplication(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string relieverCode) {
            object[] results = this.Invoke("LeaveApplication", new object[] {
                        leaveNo,
                        employeeNumber,
                        leaveType,
                        annualLeaveType,
                        daysApplied,
                        lStartDate,
                        phoneNumber,
                        emailAddress,
                        examdetails,
                        dateOfExam,
                        previousAttempts,
                        relieverCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LeaveApplicationAsync(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string relieverCode) {
            this.LeaveApplicationAsync(leaveNo, employeeNumber, leaveType, annualLeaveType, daysApplied, lStartDate, phoneNumber, emailAddress, examdetails, dateOfExam, previousAttempts, relieverCode, null);
        }
        
        /// <remarks/>
        public void LeaveApplicationAsync(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string relieverCode, object userState) {
            if ((this.LeaveApplicationOperationCompleted == null)) {
                this.LeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("LeaveApplication", new object[] {
                        leaveNo,
                        employeeNumber,
                        leaveType,
                        annualLeaveType,
                        daysApplied,
                        lStartDate,
                        phoneNumber,
                        emailAddress,
                        examdetails,
                        dateOfExam,
                        previousAttempts,
                        relieverCode}, this.LeaveApplicationOperationCompleted, userState);
        }
        
        private void OnLeaveApplicationOperationCompleted(object arg) {
            if ((this.LeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveApplicationCompleted(this, new LeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GeneratePayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GeneratePayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePayslip(string employeeNumber, System.DateTime payPeriod) {
            object[] results = this.Invoke("GeneratePayslip", new object[] {
                        employeeNumber,
                        payPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, System.DateTime payPeriod) {
            this.GeneratePayslipAsync(employeeNumber, payPeriod, null);
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, System.DateTime payPeriod, object userState) {
            if ((this.GeneratePayslipOperationCompleted == null)) {
                this.GeneratePayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePayslipOperationCompleted);
            }
            this.InvokeAsync("GeneratePayslip", new object[] {
                        employeeNumber,
                        payPeriod}, this.GeneratePayslipOperationCompleted, userState);
        }
        
        private void OnGeneratePayslipOperationCompleted(object arg) {
            if ((this.GeneratePayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePayslipCompleted(this, new GeneratePayslipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateEmployeeStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateEmployeeStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateEmployeeStatement(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GenerateEmployeeStatement", new object[] {
                        employeeNumber,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateEmployeeStatementAsync(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateEmployeeStatementAsync(employeeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateEmployeeStatementAsync(string employeeNumber, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateEmployeeStatementOperationCompleted == null)) {
                this.GenerateEmployeeStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateEmployeeStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateEmployeeStatement", new object[] {
                        employeeNumber,
                        startDate,
                        endDate}, this.GenerateEmployeeStatementOperationCompleted, userState);
        }
        
        private void OnGenerateEmployeeStatementOperationCompleted(object arg) {
            if ((this.GenerateEmployeeStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateEmployeeStatementCompleted(this, new GenerateEmployeeStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateP9", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateP9_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateP9(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GenerateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateP9Async(employeeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateP9OperationCompleted == null)) {
                this.GenerateP9OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateP9OperationCompleted);
            }
            this.InvokeAsync("GenerateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate}, this.GenerateP9OperationCompleted, userState);
        }
        
        private void OnGenerateP9OperationCompleted(object arg) {
            if ((this.GenerateP9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateP9Completed(this, new GenerateP9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Register", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Register_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Register(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender) {
            object[] results = this.Invoke("Register", new object[] {
                        first_Name,
                        middle_Name,
                        last_name,
                        email_Address,
                        phone_Number,
                        idNumbera47Passport,
                        citizenship,
                        gender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender) {
            this.RegisterAsync(first_Name, middle_Name, last_name, email_Address, phone_Number, idNumbera47Passport, citizenship, gender, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        first_Name,
                        middle_Name,
                        last_name,
                        email_Address,
                        phone_Number,
                        idNumbera47Passport,
                        citizenship,
                        gender}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddHobby", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddHobby_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHobby(string idNumber, string hobby) {
            object[] results = this.Invoke("AddHobby", new object[] {
                        idNumber,
                        hobby});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHobbyAsync(string idNumber, string hobby) {
            this.AddHobbyAsync(idNumber, hobby, null);
        }
        
        /// <remarks/>
        public void AddHobbyAsync(string idNumber, string hobby, object userState) {
            if ((this.AddHobbyOperationCompleted == null)) {
                this.AddHobbyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHobbyOperationCompleted);
            }
            this.InvokeAsync("AddHobby", new object[] {
                        idNumber,
                        hobby}, this.AddHobbyOperationCompleted, userState);
        }
        
        private void OnAddHobbyOperationCompleted(object arg) {
            if ((this.AddHobbyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHobbyCompleted(this, new AddHobbyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateGeneralDetails(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship) {
            object[] results = this.Invoke("UpdateGeneralDetails", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        initials,
                        firstLanguage,
                        firstLanguageRead,
                        firstLanguageWrite,
                        firstLanguageSpeak,
                        secondLanguage,
                        secondLanguageRead,
                        secondLanguageWrite,
                        secondLanguageSpeak,
                        additionalLanguage,
                        gender,
                        citizenship});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeneralDetailsAsync(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship) {
            this.UpdateGeneralDetailsAsync(idNumber, firstName, middleName, lastName, initials, firstLanguage, firstLanguageRead, firstLanguageWrite, firstLanguageSpeak, secondLanguage, secondLanguageRead, secondLanguageWrite, secondLanguageSpeak, additionalLanguage, gender, citizenship, null);
        }
        
        /// <remarks/>
        public void UpdateGeneralDetailsAsync(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship, 
                    object userState) {
            if ((this.UpdateGeneralDetailsOperationCompleted == null)) {
                this.UpdateGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateGeneralDetails", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        initials,
                        firstLanguage,
                        firstLanguageRead,
                        firstLanguageWrite,
                        firstLanguageSpeak,
                        secondLanguage,
                        secondLanguageRead,
                        secondLanguageWrite,
                        secondLanguageSpeak,
                        additionalLanguage,
                        gender,
                        citizenship}, this.UpdateGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateGeneralDetailsOperationCompleted(object arg) {
            if ((this.UpdateGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeneralDetailsCompleted(this, new UpdateGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdatePersonalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdatePersonalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePersonalDetails(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime healthAssessmentDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth) {
            object[] results = this.Invoke("UpdatePersonalDetails", new object[] {
                        idNumber,
                        maritalStatus,
                        ethnicOrigin,
                        disabled,
                        healthAssessment,
                        healthAssessmentDate,
                        dateOfBirth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePersonalDetailsAsync(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, System.DateTime healthAssessmentDate, System.DateTime dateOfBirth) {
            this.UpdatePersonalDetailsAsync(idNumber, maritalStatus, ethnicOrigin, disabled, healthAssessment, healthAssessmentDate, dateOfBirth, null);
        }
        
        /// <remarks/>
        public void UpdatePersonalDetailsAsync(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, System.DateTime healthAssessmentDate, System.DateTime dateOfBirth, object userState) {
            if ((this.UpdatePersonalDetailsOperationCompleted == null)) {
                this.UpdatePersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdatePersonalDetails", new object[] {
                        idNumber,
                        maritalStatus,
                        ethnicOrigin,
                        disabled,
                        healthAssessment,
                        healthAssessmentDate,
                        dateOfBirth}, this.UpdatePersonalDetailsOperationCompleted, userState);
        }
        
        private void OnUpdatePersonalDetailsOperationCompleted(object arg) {
            if ((this.UpdatePersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePersonalDetailsCompleted(this, new UpdatePersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateCommunicationDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateCommunicationDetails(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2) {
            object[] results = this.Invoke("UpdateCommunicationDetails", new object[] {
                        idNumber,
                        homePhoneNumber,
                        postalAddress,
                        postalAddress2,
                        postalAddress3,
                        residentialAddress,
                        residentialAddress2,
                        residentialAddress3,
                        cellPhoneNumber,
                        workPhoneNumber,
                        extension,
                        fax,
                        postCode,
                        postCode2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommunicationDetailsAsync(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2) {
            this.UpdateCommunicationDetailsAsync(idNumber, homePhoneNumber, postalAddress, postalAddress2, postalAddress3, residentialAddress, residentialAddress2, residentialAddress3, cellPhoneNumber, workPhoneNumber, extension, fax, postCode, postCode2, null);
        }
        
        /// <remarks/>
        public void UpdateCommunicationDetailsAsync(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2, object userState) {
            if ((this.UpdateCommunicationDetailsOperationCompleted == null)) {
                this.UpdateCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCommunicationDetails", new object[] {
                        idNumber,
                        homePhoneNumber,
                        postalAddress,
                        postalAddress2,
                        postalAddress3,
                        residentialAddress,
                        residentialAddress2,
                        residentialAddress3,
                        cellPhoneNumber,
                        workPhoneNumber,
                        extension,
                        fax,
                        postCode,
                        postCode2}, this.UpdateCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCommunicationDetailsOperationCompleted(object arg) {
            if ((this.UpdateCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommunicationDetailsCompleted(this, new UpdateCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddReferee(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail) {
            object[] results = this.Invoke("AddReferee", new object[] {
                        idNumber,
                        refName,
                        refDesignation,
                        refInstitution,
                        refAddress,
                        refTelephone,
                        refEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRefereeAsync(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail) {
            this.AddRefereeAsync(idNumber, refName, refDesignation, refInstitution, refAddress, refTelephone, refEmail, null);
        }
        
        /// <remarks/>
        public void AddRefereeAsync(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail, object userState) {
            if ((this.AddRefereeOperationCompleted == null)) {
                this.AddRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRefereeOperationCompleted);
            }
            this.InvokeAsync("AddReferee", new object[] {
                        idNumber,
                        refName,
                        refDesignation,
                        refInstitution,
                        refAddress,
                        refTelephone,
                        refEmail}, this.AddRefereeOperationCompleted, userState);
        }
        
        private void OnAddRefereeOperationCompleted(object arg) {
            if ((this.AddRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRefereeCompleted(this, new AddRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddQualification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQualification(string idNumber, string qualificationType, string qualificationCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime qualificationFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime qualificationTo, string institution) {
            object[] results = this.Invoke("AddQualification", new object[] {
                        idNumber,
                        qualificationType,
                        qualificationCode,
                        qualificationFrom,
                        qualificationTo,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQualificationAsync(string idNumber, string qualificationType, string qualificationCode, System.DateTime qualificationFrom, System.DateTime qualificationTo, string institution) {
            this.AddQualificationAsync(idNumber, qualificationType, qualificationCode, qualificationFrom, qualificationTo, institution, null);
        }
        
        /// <remarks/>
        public void AddQualificationAsync(string idNumber, string qualificationType, string qualificationCode, System.DateTime qualificationFrom, System.DateTime qualificationTo, string institution, object userState) {
            if ((this.AddQualificationOperationCompleted == null)) {
                this.AddQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQualificationOperationCompleted);
            }
            this.InvokeAsync("AddQualification", new object[] {
                        idNumber,
                        qualificationType,
                        qualificationCode,
                        qualificationFrom,
                        qualificationTo,
                        institution}, this.AddQualificationOperationCompleted, userState);
        }
        
        private void OnAddQualificationOperationCompleted(object arg) {
            if ((this.AddQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQualificationCompleted(this, new AddQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Apply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Apply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Apply(string idNumber, string jobId) {
            object[] results = this.Invoke("Apply", new object[] {
                        idNumber,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyAsync(string idNumber, string jobId) {
            this.ApplyAsync(idNumber, jobId, null);
        }
        
        /// <remarks/>
        public void ApplyAsync(string idNumber, string jobId, object userState) {
            if ((this.ApplyOperationCompleted == null)) {
                this.ApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyOperationCompleted);
            }
            this.InvokeAsync("Apply", new object[] {
                        idNumber,
                        jobId}, this.ApplyOperationCompleted, userState);
        }
        
        private void OnApplyOperationCompleted(object arg) {
            if ((this.ApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyCompleted(this, new ApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ImprestGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ImprestGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ImprestGeneralDetails(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode) {
            object[] results = this.Invoke("ImprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode) {
            this.ImprestGeneralDetailsAsync(employeeNo, imprestNo, subject, objective, destinationNarration, travelDate, numberOfDays, job, jobTaskNo, fundCode, null);
        }
        
        /// <remarks/>
        public void ImprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, object userState) {
            if ((this.ImprestGeneralDetailsOperationCompleted == null)) {
                this.ImprestGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("ImprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode}, this.ImprestGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnImprestGeneralDetailsOperationCompleted(object arg) {
            if ((this.ImprestGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestGeneralDetailsCompleted(this, new ImprestGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetImprestObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetImprestObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetImprestObjective(string imprestNo, string employeeNo) {
            object[] results = this.Invoke("GetImprestObjective", new object[] {
                        imprestNo,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImprestObjectiveAsync(string imprestNo, string employeeNo) {
            this.GetImprestObjectiveAsync(imprestNo, employeeNo, null);
        }
        
        /// <remarks/>
        public void GetImprestObjectiveAsync(string imprestNo, string employeeNo, object userState) {
            if ((this.GetImprestObjectiveOperationCompleted == null)) {
                this.GetImprestObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImprestObjectiveOperationCompleted);
            }
            this.InvokeAsync("GetImprestObjective", new object[] {
                        imprestNo,
                        employeeNo}, this.GetImprestObjectiveOperationCompleted, userState);
        }
        
        private void OnGetImprestObjectiveOperationCompleted(object arg) {
            if ((this.GetImprestObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImprestObjectiveCompleted(this, new GetImprestObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTeamMember(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays) {
            object[] results = this.Invoke("AddTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays) {
            this.AddTeamMemberAsync(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, null);
        }
        
        /// <remarks/>
        public void AddTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, object userState) {
            if ((this.AddTeamMemberOperationCompleted == null)) {
                this.AddTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeamMemberOperationCompleted);
            }
            this.InvokeAsync("AddTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays}, this.AddTeamMemberOperationCompleted, userState);
        }
        
        private void OnAddTeamMemberOperationCompleted(object arg) {
            if ((this.AddTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeamMemberCompleted(this, new AddTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            object[] results = this.Invoke("AddFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            this.AddFuelAsync(employeeNo, imprestNo, workType, resource, mileage, null);
        }
        
        /// <remarks/>
        public void AddFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, object userState) {
            if ((this.AddFuelOperationCompleted == null)) {
                this.AddFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelOperationCompleted);
            }
            this.InvokeAsync("AddFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage}, this.AddFuelOperationCompleted, userState);
        }
        
        private void OnAddFuelOperationCompleted(object arg) {
            if ((this.AddFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelCompleted(this, new AddFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays) {
            object[] results = this.Invoke("AddCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays) {
            this.AddCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, null);
        }
        
        /// <remarks/>
        public void AddCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, object userState) {
            if ((this.AddCasualsOperationCompleted == null)) {
                this.AddCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCasualsOperationCompleted);
            }
            this.InvokeAsync("AddCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays}, this.AddCasualsOperationCompleted, userState);
        }
        
        private void OnAddCasualsOperationCompleted(object arg) {
            if ((this.AddCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCasualsCompleted(this, new AddCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost) {
            object[] results = this.Invoke("AddOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost) {
            this.AddOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, quantityRequired, noOfDays, unitCost, null);
        }
        
        /// <remarks/>
        public void AddOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, object userState) {
            if ((this.AddOtherCostsOperationCompleted == null)) {
                this.AddOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherCostsOperationCompleted);
            }
            this.InvokeAsync("AddOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost}, this.AddOtherCostsOperationCompleted, userState);
        }
        
        private void OnAddOtherCostsOperationCompleted(object arg) {
            if ((this.AddOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherCostsCompleted(this, new AddOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestMemoApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestMemoApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestMemoApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("SendImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestMemoApprovalAsync(string employeeNo, string imprestNo) {
            this.SendImprestMemoApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void SendImprestMemoApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.SendImprestMemoApprovalOperationCompleted == null)) {
                this.SendImprestMemoApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestMemoApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.SendImprestMemoApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestMemoApprovalOperationCompleted(object arg) {
            if ((this.SendImprestMemoApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestMemoApprovalCompleted(this, new SendImprestMemoApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateImprestSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateImprestSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateImprestSurrender(string employeeNo, string imprestNo, string surrenderNo) {
            object[] results = this.Invoke("CreateImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo) {
            this.CreateImprestSurrenderAsync(employeeNo, imprestNo, surrenderNo, null);
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, object userState) {
            if ((this.CreateImprestSurrenderOperationCompleted == null)) {
                this.CreateImprestSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateImprestSurrenderOperationCompleted);
            }
            this.InvokeAsync("CreateImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo}, this.CreateImprestSurrenderOperationCompleted, userState);
        }
        
        private void OnCreateImprestSurrenderOperationCompleted(object arg) {
            if ((this.CreateImprestSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateImprestSurrenderCompleted(this, new CreateImprestSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestSurrenderApproval(string employeeNo, string imprestSurrenderNo) {
            object[] results = this.Invoke("SendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo) {
            this.SendImprestSurrenderApprovalAsync(employeeNo, imprestSurrenderNo, null);
        }
        
        /// <remarks/>
        public void SendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo, object userState) {
            if ((this.SendImprestSurrenderApprovalOperationCompleted == null)) {
                this.SendImprestSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo}, this.SendImprestSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestSurrenderApprovalOperationCompleted(object arg) {
            if ((this.SendImprestSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestSurrenderApprovalCompleted(this, new SendImprestSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateSurrenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateSurrenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateSurrenderLine(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, string branchCode, string departmentCode) {
            object[] results = this.Invoke("UpdateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt,
                        branchCode,
                        departmentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, string branchCode, string departmentCode) {
            this.UpdateSurrenderLineAsync(employeeNo, imprestSurrenderNo, lineNo, amountSpent, receipt, branchCode, departmentCode, null);
        }
        
        /// <remarks/>
        public void UpdateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, string branchCode, string departmentCode, object userState) {
            if ((this.UpdateSurrenderLineOperationCompleted == null)) {
                this.UpdateSurrenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSurrenderLineOperationCompleted);
            }
            this.InvokeAsync("UpdateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt,
                        branchCode,
                        departmentCode}, this.UpdateSurrenderLineOperationCompleted, userState);
        }
        
        private void OnUpdateSurrenderLineOperationCompleted(object arg) {
            if ((this.UpdateSurrenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSurrenderLineCompleted(this, new UpdateSurrenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreatePurchaseStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreatePurchaseStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePurchaseStoreRequisition(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string branch, string jobNo, string jobTask) {
            object[] results = this.Invoke("CreatePurchaseStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        type,
                        fundCode,
                        branch,
                        jobNo,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePurchaseStoreRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string branch, string jobNo, string jobTask) {
            this.CreatePurchaseStoreRequisitionAsync(employeeNo, requisitionNo, location, description, type, fundCode, branch, jobNo, jobTask, null);
        }
        
        /// <remarks/>
        public void CreatePurchaseStoreRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string branch, string jobNo, string jobTask, object userState) {
            if ((this.CreatePurchaseStoreRequisitionOperationCompleted == null)) {
                this.CreatePurchaseStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePurchaseStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreatePurchaseStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        type,
                        fundCode,
                        branch,
                        jobNo,
                        jobTask}, this.CreatePurchaseStoreRequisitionOperationCompleted, userState);
        }
        
        private void OnCreatePurchaseStoreRequisitionOperationCompleted(object arg) {
            if ((this.CreatePurchaseStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePurchaseStoreRequisitionCompleted(this, new CreatePurchaseStoreRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRequisitionLine(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost) {
            object[] results = this.Invoke("CreateRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        budget,
                        procurementPlan,
                        itemCategory,
                        item,
                        quantity,
                        directUnitCost});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRequisitionLineAsync(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost) {
            this.CreateRequisitionLineAsync(employeeNo, requisitionNo, budget, procurementPlan, itemCategory, item, quantity, directUnitCost, null);
        }
        
        /// <remarks/>
        public void CreateRequisitionLineAsync(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost, object userState) {
            if ((this.CreateRequisitionLineOperationCompleted == null)) {
                this.CreateRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("CreateRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        budget,
                        procurementPlan,
                        itemCategory,
                        item,
                        quantity,
                        directUnitCost}, this.CreateRequisitionLineOperationCompleted, userState);
        }
        
        private void OnCreateRequisitionLineOperationCompleted(object arg) {
            if ((this.CreateRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRequisitionLineCompleted(this, new CreateRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendPurchaseRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendPurchaseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPurchaseRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendPurchaseRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendPurchaseRequisitionApprovalOperationCompleted == null)) {
                this.SendPurchaseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPurchaseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendPurchaseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendPurchaseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendPurchaseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPurchaseRequisitionApprovalCompleted(this, new SendPurchaseRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateFleetRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateFleetRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateFleetRequisition(string employeeNo, string requisitionNo, string from, string destination, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments) {
            object[] results = this.Invoke("CreateFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments) {
            this.CreateFleetRequisitionAsync(employeeNo, requisitionNo, from, destination, dateOfTrip, timeOut, journeyRoute, noOfDaysRequested, purposeOfTrip, comments, null);
        }
        
        /// <remarks/>
        public void CreateFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, object userState) {
            if ((this.CreateFleetRequisitionOperationCompleted == null)) {
                this.CreateFleetRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFleetRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments}, this.CreateFleetRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateFleetRequisitionOperationCompleted(object arg) {
            if ((this.CreateFleetRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFleetRequisitionCompleted(this, new CreateFleetRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionStaff(string employeeNo, string requisitionNo, string staffNo) {
            object[] results = this.Invoke("AddFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo) {
            this.AddFleetRequisitionStaffAsync(employeeNo, requisitionNo, staffNo, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo, object userState) {
            if ((this.AddFleetRequisitionStaffOperationCompleted == null)) {
                this.AddFleetRequisitionStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionStaffOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo}, this.AddFleetRequisitionStaffOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionStaffOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionStaffCompleted(this, new AddFleetRequisitionStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionNonStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionNonStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionNonStaff(string employeeNo, string requisitionNo, int idNumber, int phoneNumber, string organizationName, string name) {
            object[] results = this.Invoke("AddFleetRequisitionNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idNumber,
                        phoneNumber,
                        organizationName,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionNonStaffAsync(string employeeNo, string requisitionNo, int idNumber, int phoneNumber, string organizationName, string name) {
            this.AddFleetRequisitionNonStaffAsync(employeeNo, requisitionNo, idNumber, phoneNumber, organizationName, name, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionNonStaffAsync(string employeeNo, string requisitionNo, int idNumber, int phoneNumber, string organizationName, string name, object userState) {
            if ((this.AddFleetRequisitionNonStaffOperationCompleted == null)) {
                this.AddFleetRequisitionNonStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionNonStaffOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idNumber,
                        phoneNumber,
                        organizationName,
                        name}, this.AddFleetRequisitionNonStaffOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionNonStaffOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionNonStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionNonStaffCompleted(this, new AddFleetRequisitionNonStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendFleetRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendFleetRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendFleetRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendFleetRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendFleetRequisitionApprovalOperationCompleted == null)) {
                this.SendFleetRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFleetRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendFleetRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendFleetRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendFleetRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFleetRequisitionApprovalCompleted(this, new SendFleetRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveStaffFromTravelRequisition" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveStaffFromTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveStaffFromTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.RemoveStaffFromTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveStaffFromTravelRequisitionOperationCompleted == null)) {
                this.RemoveStaffFromTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveStaffFromTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("RemoveStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.RemoveStaffFromTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnRemoveStaffFromTravelRequisitionOperationCompleted(object arg) {
            if ((this.RemoveStaffFromTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveStaffFromTravelRequisitionCompleted(this, new RemoveStaffFromTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveMemberFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveMemberFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveMemberFromImprestMemo(string number, string workType, string mEmployeeNo, string imprestNo) {
            object[] results = this.Invoke("RemoveMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo) {
            this.RemoveMemberFromImprestMemoAsync(number, workType, mEmployeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void RemoveMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo, object userState) {
            if ((this.RemoveMemberFromImprestMemoOperationCompleted == null)) {
                this.RemoveMemberFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMemberFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("RemoveMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo}, this.RemoveMemberFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnRemoveMemberFromImprestMemoOperationCompleted(object arg) {
            if ((this.RemoveMemberFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMemberFromImprestMemoCompleted(this, new RemoveMemberFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditTeamMember(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType) {
            object[] results = this.Invoke("EditTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType) {
            this.EditTeamMemberAsync(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, originalNumber, originalWorkType, null);
        }
        
        /// <remarks/>
        public void EditTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, object userState) {
            if ((this.EditTeamMemberOperationCompleted == null)) {
                this.EditTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTeamMemberOperationCompleted);
            }
            this.InvokeAsync("EditTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType}, this.EditTeamMemberOperationCompleted, userState);
        }
        
        private void OnEditTeamMemberOperationCompleted(object arg) {
            if ((this.EditTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTeamMemberCompleted(this, new EditTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveFuelFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveFuelFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFuelFromImprestMemo(string number, string workType, string mEmployeeNo, string imprestNo) {
            object[] results = this.Invoke("RemoveFuelFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo) {
            this.RemoveFuelFromImprestMemoAsync(number, workType, mEmployeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo, object userState) {
            if ((this.RemoveFuelFromImprestMemoOperationCompleted == null)) {
                this.RemoveFuelFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFuelFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("RemoveFuelFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo}, this.RemoveFuelFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnRemoveFuelFromImprestMemoOperationCompleted(object arg) {
            if ((this.RemoveFuelFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFuelFromImprestMemoCompleted(this, new RemoveFuelFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            object[] results = this.Invoke("EditFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            this.EditFuelAsync(employeeNo, imprestNo, workType, resource, mileage, originalNo, originalWorkType, null);
        }
        
        /// <remarks/>
        public void EditFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType, object userState) {
            if ((this.EditFuelOperationCompleted == null)) {
                this.EditFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFuelOperationCompleted);
            }
            this.InvokeAsync("EditFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType}, this.EditFuelOperationCompleted, userState);
        }
        
        private void OnEditFuelOperationCompleted(object arg) {
            if ((this.EditFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFuelCompleted(this, new EditFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveCasuals(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            object[] results = this.Invoke("RemoveCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            this.RemoveCasualsAsync(employeeNo, imprestNo, resourceType, resourceNo, null);
        }
        
        /// <remarks/>
        public void RemoveCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo, object userState) {
            if ((this.RemoveCasualsOperationCompleted == null)) {
                this.RemoveCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCasualsOperationCompleted);
            }
            this.InvokeAsync("RemoveCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo}, this.RemoveCasualsOperationCompleted, userState);
        }
        
        private void OnRemoveCasualsOperationCompleted(object arg) {
            if ((this.RemoveCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCasualsCompleted(this, new RemoveCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo) {
            object[] results = this.Invoke("EditCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo) {
            this.EditCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, originalResourceType, originalResourceNo, null);
        }
        
        /// <remarks/>
        public void EditCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, object userState) {
            if ((this.EditCasualsOperationCompleted == null)) {
                this.EditCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCasualsOperationCompleted);
            }
            this.InvokeAsync("EditCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo}, this.EditCasualsOperationCompleted, userState);
        }
        
        private void OnEditCasualsOperationCompleted(object arg) {
            if ((this.EditCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCasualsCompleted(this, new EditCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveOtherCosts(string imprestNo, string employeeNo, int lineNo) {
            object[] results = this.Invoke("RemoveOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveOtherCostsAsync(string imprestNo, string employeeNo, int lineNo) {
            this.RemoveOtherCostsAsync(imprestNo, employeeNo, lineNo, null);
        }
        
        /// <remarks/>
        public void RemoveOtherCostsAsync(string imprestNo, string employeeNo, int lineNo, object userState) {
            if ((this.RemoveOtherCostsOperationCompleted == null)) {
                this.RemoveOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOtherCostsOperationCompleted);
            }
            this.InvokeAsync("RemoveOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo}, this.RemoveOtherCostsOperationCompleted, userState);
        }
        
        private void OnRemoveOtherCostsOperationCompleted(object arg) {
            if ((this.RemoveOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOtherCostsCompleted(this, new RemoveOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo) {
            object[] results = this.Invoke("EditOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo) {
            this.EditOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, quantityRequired, noOfDays, unitCost, originalLineNo, null);
        }
        
        /// <remarks/>
        public void EditOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, object userState) {
            if ((this.EditOtherCostsOperationCompleted == null)) {
                this.EditOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOtherCostsOperationCompleted);
            }
            this.InvokeAsync("EditOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo}, this.EditOtherCostsOperationCompleted, userState);
        }
        
        private void OnEditOtherCostsOperationCompleted(object arg) {
            if ((this.EditOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditOtherCostsCompleted(this, new EditOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateLeaveForm", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateLeaveForm_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateLeaveForm(string employeeNo, string leaveNo) {
            object[] results = this.Invoke("GenerateLeaveForm", new object[] {
                        employeeNo,
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateLeaveFormAsync(string employeeNo, string leaveNo) {
            this.GenerateLeaveFormAsync(employeeNo, leaveNo, null);
        }
        
        /// <remarks/>
        public void GenerateLeaveFormAsync(string employeeNo, string leaveNo, object userState) {
            if ((this.GenerateLeaveFormOperationCompleted == null)) {
                this.GenerateLeaveFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateLeaveFormOperationCompleted);
            }
            this.InvokeAsync("GenerateLeaveForm", new object[] {
                        employeeNo,
                        leaveNo}, this.GenerateLeaveFormOperationCompleted, userState);
        }
        
        private void OnGenerateLeaveFormOperationCompleted(object arg) {
            if ((this.GenerateLeaveFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateLeaveFormCompleted(this, new GenerateLeaveFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendRecordForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendRecordForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendRecordForApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("SendRecordForApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendRecordForApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.SendRecordForApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void SendRecordForApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.SendRecordForApprovalOperationCompleted == null)) {
                this.SendRecordForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRecordForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendRecordForApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.SendRecordForApprovalOperationCompleted, userState);
        }
        
        private void OnSendRecordForApprovalOperationCompleted(object arg) {
            if ((this.SendRecordForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRecordForApprovalCompleted(this, new SendRecordForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelRecordApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelRecordApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelRecordApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("CancelRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelRecordApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.CancelRecordApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void CancelRecordApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.CancelRecordApprovalOperationCompleted == null)) {
                this.CancelRecordApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelRecordApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.CancelRecordApprovalOperationCompleted, userState);
        }
        
        private void OnCancelRecordApprovalOperationCompleted(object arg) {
            if ((this.CancelRecordApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelRecordApprovalCompleted(this, new CancelRecordApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangePassword(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            this.ChangePasswordAsync(employeeNo, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRequisitionLine(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            object[] results = this.Invoke("DeleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            this.DeleteRequisitionLineAsync(employeeNo, requisitionNo, lineNo, documentType, null);
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType, object userState) {
            if ((this.DeleteRequisitionLineOperationCompleted == null)) {
                this.DeleteRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType}, this.DeleteRequisitionLineOperationCompleted, userState);
        }
        
        private void OnDeleteRequisitionLineOperationCompleted(object arg) {
            if ((this.DeleteRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRequisitionLineCompleted(this, new DeleteRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStaffClaimApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStaffClaimApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStaffClaimApproval(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim) {
            this.SendStaffClaimApprovalAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.SendStaffClaimApprovalOperationCompleted == null)) {
                this.SendStaffClaimApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStaffClaimApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim}, this.SendStaffClaimApprovalOperationCompleted, userState);
        }
        
        private void OnSendStaffClaimApprovalOperationCompleted(object arg) {
            if ((this.SendStaffClaimApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStaffClaimApprovalCompleted(this, new SendStaffClaimApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaim(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask) {
            object[] results = this.Invoke("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask) {
            this.CreateStaffClaimAsync(employeeNo, claimNo, paymentNarration, fundCode, job, jobTask, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, object userState) {
            if ((this.CreateStaffClaimOperationCompleted == null)) {
                this.CreateStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask}, this.CreateStaffClaimOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimOperationCompleted(object arg) {
            if ((this.CreateStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimCompleted(this, new CreateStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStaffClaimLine(string employeeNo, string claimNo, int lineNo) {
            object[] results = this.Invoke("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo) {
            this.DeleteStaffClaimLineAsync(employeeNo, claimNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo, object userState) {
            if ((this.DeleteStaffClaimLineOperationCompleted == null)) {
                this.DeleteStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo}, this.DeleteStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnDeleteStaffClaimLineOperationCompleted(object arg) {
            if ((this.DeleteStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStaffClaimLineCompleted(this, new DeleteStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaimLine(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.CreateStaffClaimLineAsync(employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.CreateStaffClaimLineOperationCompleted == null)) {
                this.CreateStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.CreateStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimLineOperationCompleted(object arg) {
            if ((this.CreateStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimLineCompleted(this, new CreateStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditStaffClaimLine(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.EditStaffClaimLineAsync(lineNo, employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.EditStaffClaimLineOperationCompleted == null)) {
                this.EditStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.EditStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnEditStaffClaimLineOperationCompleted(object arg) {
            if ((this.EditStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditStaffClaimLineCompleted(this, new EditStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStoreRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStoreRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStoreRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendStoreRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStoreRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendStoreRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendStoreRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendStoreRequisitionApprovalOperationCompleted == null)) {
                this.SendStoreRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStoreRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStoreRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendStoreRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendStoreRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendStoreRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStoreRequisitionApprovalCompleted(this, new SendStoreRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStoreRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStoreRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStoreRequisitionLine(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity) {
            object[] results = this.Invoke("CreateStoreRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemCategory,
                        item,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionLineAsync(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity) {
            this.CreateStoreRequisitionLineAsync(employeeNo, requisitionNo, itemCategory, item, quantity, null);
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionLineAsync(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity, object userState) {
            if ((this.CreateStoreRequisitionLineOperationCompleted == null)) {
                this.CreateStoreRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStoreRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("CreateStoreRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemCategory,
                        item,
                        quantity}, this.CreateStoreRequisitionLineOperationCompleted, userState);
        }
        
        private void OnCreateStoreRequisitionLineOperationCompleted(object arg) {
            if ((this.CreateStoreRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStoreRequisitionLineCompleted(this, new CreateStoreRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyexternalHrJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyexternalHrJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyexternalHrJobs(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            object[] results = this.Invoke("ApplyexternalHrJobs", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyexternalHrJobsAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            this.ApplyexternalHrJobsAsync(jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, phoneNo, email, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, null);
        }
        
        /// <remarks/>
        public void ApplyexternalHrJobsAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    object userState) {
            if ((this.ApplyexternalHrJobsOperationCompleted == null)) {
                this.ApplyexternalHrJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyexternalHrJobsOperationCompleted);
            }
            this.InvokeAsync("ApplyexternalHrJobs", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails}, this.ApplyexternalHrJobsOperationCompleted, userState);
        }
        
        private void OnApplyexternalHrJobsOperationCompleted(object arg) {
            if ((this.ApplyexternalHrJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyexternalHrJobsCompleted(this, new ApplyexternalHrJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyinternalHrJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyinternalHrJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyinternalHrJobs(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfFirstAppointment, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lastPromotionDate, 
                    string ethinc) {
            object[] results = this.Invoke("ApplyinternalHrJobs", new object[] {
                        docNo,
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        phoneNo,
                        altPhoneNo,
                        email,
                        altEmail,
                        empNo,
                        dpt,
                        currentPosition,
                        jobGroup,
                        dateOfFirstAppointment,
                        lastPromotionDate,
                        ethinc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyinternalHrJobsAsync(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    System.DateTime dateOfFirstAppointment, 
                    System.DateTime lastPromotionDate, 
                    string ethinc) {
            this.ApplyinternalHrJobsAsync(docNo, jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, nhifNo, nssfNo, pinNo, phoneNo, altPhoneNo, email, altEmail, empNo, dpt, currentPosition, jobGroup, dateOfFirstAppointment, lastPromotionDate, ethinc, null);
        }
        
        /// <remarks/>
        public void ApplyinternalHrJobsAsync(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    System.DateTime dateOfFirstAppointment, 
                    System.DateTime lastPromotionDate, 
                    string ethinc, 
                    object userState) {
            if ((this.ApplyinternalHrJobsOperationCompleted == null)) {
                this.ApplyinternalHrJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyinternalHrJobsOperationCompleted);
            }
            this.InvokeAsync("ApplyinternalHrJobs", new object[] {
                        docNo,
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        phoneNo,
                        altPhoneNo,
                        email,
                        altEmail,
                        empNo,
                        dpt,
                        currentPosition,
                        jobGroup,
                        dateOfFirstAppointment,
                        lastPromotionDate,
                        ethinc}, this.ApplyinternalHrJobsOperationCompleted, userState);
        }
        
        private void OnApplyinternalHrJobsOperationCompleted(object arg) {
            if ((this.ApplyinternalHrJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyinternalHrJobsCompleted(this, new ApplyinternalHrJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateEmploymentHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateEmploymentHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateEmploymentHistory(int id, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            object[] results = this.Invoke("UpdateEmploymentHistory", new object[] {
                        id,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmploymentHistoryAsync(int id, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            this.UpdateEmploymentHistoryAsync(id, startDate, endDate, company, designation, jobGrade, appNo, empNo, jobId, null);
        }
        
        /// <remarks/>
        public void UpdateEmploymentHistoryAsync(int id, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId, object userState) {
            if ((this.UpdateEmploymentHistoryOperationCompleted == null)) {
                this.UpdateEmploymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmploymentHistoryOperationCompleted);
            }
            this.InvokeAsync("UpdateEmploymentHistory", new object[] {
                        id,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId}, this.UpdateEmploymentHistoryOperationCompleted, userState);
        }
        
        private void OnUpdateEmploymentHistoryOperationCompleted(object arg) {
            if ((this.UpdateEmploymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmploymentHistoryCompleted(this, new UpdateEmploymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddEmploymentHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddEmploymentHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddEmploymentHistory(string idNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            object[] results = this.Invoke("AddEmploymentHistory", new object[] {
                        idNumber,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryAsync(string idNumber, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            this.AddEmploymentHistoryAsync(idNumber, startDate, endDate, company, designation, jobGrade, appNo, empNo, jobId, null);
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryAsync(string idNumber, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId, object userState) {
            if ((this.AddEmploymentHistoryOperationCompleted == null)) {
                this.AddEmploymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmploymentHistoryOperationCompleted);
            }
            this.InvokeAsync("AddEmploymentHistory", new object[] {
                        idNumber,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId}, this.AddEmploymentHistoryOperationCompleted, userState);
        }
        
        private void OnAddEmploymentHistoryOperationCompleted(object arg) {
            if ((this.AddEmploymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmploymentHistoryCompleted(this, new AddEmploymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAcademicQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicQualifications(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddAcademicQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate) {
            this.AddAcademicQualificationsAsync(appNo, institution, awardAttainment, specialization, gradeAttained, empNo, jobId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddAcademicQualificationsOperationCompleted == null)) {
                this.AddAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddAcademicQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate}, this.AddAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnAddAcademicQualificationsOperationCompleted(object arg) {
            if ((this.AddAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicQualificationsCompleted(this, new AddAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProffessionalQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProffessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProffessionalQualifications(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddProffessionalQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate) {
            this.AddProffessionalQualificationsAsync(appNo, institution, awardAttainment, specialization, gradeAttained, empNo, jobId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddProffessionalQualificationsOperationCompleted == null)) {
                this.AddProffessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProffessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddProffessionalQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate}, this.AddProffessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnAddProffessionalQualificationsOperationCompleted(object arg) {
            if ((this.AddProffessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProffessionalQualificationsCompleted(this, new AddProffessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingAttended", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingAttended_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingAttended([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained) {
            object[] results = this.Invoke("AddTrainingAttended", new object[] {
                        fromDate,
                        toDate,
                        jobId,
                        employeeNo,
                        institution,
                        courseName,
                        appNo,
                        attained});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingAttendedAsync(System.DateTime fromDate, System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained) {
            this.AddTrainingAttendedAsync(fromDate, toDate, jobId, employeeNo, institution, courseName, appNo, attained, null);
        }
        
        /// <remarks/>
        public void AddTrainingAttendedAsync(System.DateTime fromDate, System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained, object userState) {
            if ((this.AddTrainingAttendedOperationCompleted == null)) {
                this.AddTrainingAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingAttendedOperationCompleted);
            }
            this.InvokeAsync("AddTrainingAttended", new object[] {
                        fromDate,
                        toDate,
                        jobId,
                        employeeNo,
                        institution,
                        courseName,
                        appNo,
                        attained}, this.AddTrainingAttendedOperationCompleted, userState);
        }
        
        private void OnAddTrainingAttendedOperationCompleted(object arg) {
            if ((this.AddTrainingAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingAttendedCompleted(this, new AddTrainingAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProfessionalBody", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProfessionalBody_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProfessionalBody(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime rDate) {
            object[] results = this.Invoke("AddProfessionalBody", new object[] {
                        appNo,
                        jobId,
                        empNo,
                        pBody,
                        mNo,
                        mType,
                        rDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProfessionalBodyAsync(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, System.DateTime rDate) {
            this.AddProfessionalBodyAsync(appNo, jobId, empNo, pBody, mNo, mType, rDate, null);
        }
        
        /// <remarks/>
        public void AddProfessionalBodyAsync(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, System.DateTime rDate, object userState) {
            if ((this.AddProfessionalBodyOperationCompleted == null)) {
                this.AddProfessionalBodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProfessionalBodyOperationCompleted);
            }
            this.InvokeAsync("AddProfessionalBody", new object[] {
                        appNo,
                        jobId,
                        empNo,
                        pBody,
                        mNo,
                        mType,
                        rDate}, this.AddProfessionalBodyOperationCompleted, userState);
        }
        
        private void OnAddProfessionalBodyOperationCompleted(object arg) {
            if ((this.AddProfessionalBodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProfessionalBodyCompleted(this, new AddProfessionalBodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddApplicantAccomplishment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddApplicantAccomplishment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddApplicantAccomplishment(string appNo, string empNo, string description, int number, string jobId, string amt) {
            object[] results = this.Invoke("AddApplicantAccomplishment", new object[] {
                        appNo,
                        empNo,
                        description,
                        number,
                        jobId,
                        amt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddApplicantAccomplishmentAsync(string appNo, string empNo, string description, int number, string jobId, string amt) {
            this.AddApplicantAccomplishmentAsync(appNo, empNo, description, number, jobId, amt, null);
        }
        
        /// <remarks/>
        public void AddApplicantAccomplishmentAsync(string appNo, string empNo, string description, int number, string jobId, string amt, object userState) {
            if ((this.AddApplicantAccomplishmentOperationCompleted == null)) {
                this.AddApplicantAccomplishmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddApplicantAccomplishmentOperationCompleted);
            }
            this.InvokeAsync("AddApplicantAccomplishment", new object[] {
                        appNo,
                        empNo,
                        description,
                        number,
                        jobId,
                        amt}, this.AddApplicantAccomplishmentOperationCompleted, userState);
        }
        
        private void OnAddApplicantAccomplishmentOperationCompleted(object arg) {
            if ((this.AddApplicantAccomplishmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddApplicantAccomplishmentCompleted(this, new AddApplicantAccomplishmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAbilityDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAbilityDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAbilityDetails(string description, string appNo) {
            object[] results = this.Invoke("AddAbilityDetails", new object[] {
                        description,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAbilityDetailsAsync(string description, string appNo) {
            this.AddAbilityDetailsAsync(description, appNo, null);
        }
        
        /// <remarks/>
        public void AddAbilityDetailsAsync(string description, string appNo, object userState) {
            if ((this.AddAbilityDetailsOperationCompleted == null)) {
                this.AddAbilityDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAbilityDetailsOperationCompleted);
            }
            this.InvokeAsync("AddAbilityDetails", new object[] {
                        description,
                        appNo}, this.AddAbilityDetailsOperationCompleted, userState);
        }
        
        private void OnAddAbilityDetailsOperationCompleted(object arg) {
            if ((this.AddAbilityDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAbilityDetailsCompleted(this, new AddAbilityDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateReferee(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId) {
            object[] results = this.Invoke("CreateReferee", new object[] {
                        appNo,
                        empNo,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        email,
                        knownPeriod,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRefereeAsync(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId) {
            this.CreateRefereeAsync(appNo, empNo, name, occupation, address, postCode, phone, email, knownPeriod, jobId, null);
        }
        
        /// <remarks/>
        public void CreateRefereeAsync(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId, object userState) {
            if ((this.CreateRefereeOperationCompleted == null)) {
                this.CreateRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRefereeOperationCompleted);
            }
            this.InvokeAsync("CreateReferee", new object[] {
                        appNo,
                        empNo,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        email,
                        knownPeriod,
                        jobId}, this.CreateRefereeOperationCompleted, userState);
        }
        
        private void OnCreateRefereeOperationCompleted(object arg) {
            if ((this.CreateRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRefereeCompleted(this, new CreateRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddCurrentDutiesSkills", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddCurrentDutiesSkills_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCurrentDutiesSkills(string abilities, string currentDuties, string appNo) {
            object[] results = this.Invoke("AddCurrentDutiesSkills", new object[] {
                        abilities,
                        currentDuties,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCurrentDutiesSkillsAsync(string abilities, string currentDuties, string appNo) {
            this.AddCurrentDutiesSkillsAsync(abilities, currentDuties, appNo, null);
        }
        
        /// <remarks/>
        public void AddCurrentDutiesSkillsAsync(string abilities, string currentDuties, string appNo, object userState) {
            if ((this.AddCurrentDutiesSkillsOperationCompleted == null)) {
                this.AddCurrentDutiesSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCurrentDutiesSkillsOperationCompleted);
            }
            this.InvokeAsync("AddCurrentDutiesSkills", new object[] {
                        abilities,
                        currentDuties,
                        appNo}, this.AddCurrentDutiesSkillsOperationCompleted, userState);
        }
        
        private void OnAddCurrentDutiesSkillsOperationCompleted(object arg) {
            if ((this.AddCurrentDutiesSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCurrentDutiesSkillsCompleted(this, new AddCurrentDutiesSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddOtherPersonalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddOtherPersonalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherPersonalDetails(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel) {
            object[] results = this.Invoke("AddOtherPersonalDetails", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherPersonalDetailsAsync(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel) {
            this.AddOtherPersonalDetailsAsync(appNo, convicted, convictionDesc, dismissal, dismissalDesc, highestLevel, null);
        }
        
        /// <remarks/>
        public void AddOtherPersonalDetailsAsync(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel, object userState) {
            if ((this.AddOtherPersonalDetailsOperationCompleted == null)) {
                this.AddOtherPersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherPersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("AddOtherPersonalDetails", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel}, this.AddOtherPersonalDetailsOperationCompleted, userState);
        }
        
        private void OnAddOtherPersonalDetailsOperationCompleted(object arg) {
            if ((this.AddOtherPersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherPersonalDetailsCompleted(this, new AddOtherPersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddDutiesDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddDutiesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDutiesDetails(string description, string appNo) {
            object[] results = this.Invoke("AddDutiesDetails", new object[] {
                        description,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDutiesDetailsAsync(string description, string appNo) {
            this.AddDutiesDetailsAsync(description, appNo, null);
        }
        
        /// <remarks/>
        public void AddDutiesDetailsAsync(string description, string appNo, object userState) {
            if ((this.AddDutiesDetailsOperationCompleted == null)) {
                this.AddDutiesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDutiesDetailsOperationCompleted);
            }
            this.InvokeAsync("AddDutiesDetails", new object[] {
                        description,
                        appNo}, this.AddDutiesDetailsOperationCompleted, userState);
        }
        
        private void OnAddDutiesDetailsOperationCompleted(object arg) {
            if ((this.AddDutiesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDutiesDetailsCompleted(this, new AddDutiesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteAcademicLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteAcademicLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAcademicLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteAcademicLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAcademicLineAsync(int id, string appNo) {
            this.DeleteAcademicLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteAcademicLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteAcademicLineOperationCompleted == null)) {
                this.DeleteAcademicLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAcademicLineOperationCompleted);
            }
            this.InvokeAsync("DeleteAcademicLine", new object[] {
                        id,
                        appNo}, this.DeleteAcademicLineOperationCompleted, userState);
        }
        
        private void OnDeleteAcademicLineOperationCompleted(object arg) {
            if ((this.DeleteAcademicLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAcademicLineCompleted(this, new DeleteAcademicLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProfessionalLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProfessionalLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProfessionalLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteProfessionalLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineAsync(int id, string appNo) {
            this.DeleteProfessionalLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteProfessionalLineOperationCompleted == null)) {
                this.DeleteProfessionalLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfessionalLineOperationCompleted);
            }
            this.InvokeAsync("DeleteProfessionalLine", new object[] {
                        id,
                        appNo}, this.DeleteProfessionalLineOperationCompleted, userState);
        }
        
        private void OnDeleteProfessionalLineOperationCompleted(object arg) {
            if ((this.DeleteProfessionalLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfessionalLineCompleted(this, new DeleteProfessionalLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteTrainingLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingLineAsync(int id, string appNo) {
            this.DeleteTrainingLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteTrainingLineOperationCompleted == null)) {
                this.DeleteTrainingLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingLineOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingLine", new object[] {
                        id,
                        appNo}, this.DeleteTrainingLineOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingLineOperationCompleted(object arg) {
            if ((this.DeleteTrainingLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingLineCompleted(this, new DeleteTrainingLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProffessionalBodyLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProffessionalBodyLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProffessionalBodyLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteProffessionalBodyLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineAsync(int id, string appNo) {
            this.DeleteProffessionalBodyLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteProffessionalBodyLineOperationCompleted == null)) {
                this.DeleteProffessionalBodyLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProffessionalBodyLineOperationCompleted);
            }
            this.InvokeAsync("DeleteProffessionalBodyLine", new object[] {
                        id,
                        appNo}, this.DeleteProffessionalBodyLineOperationCompleted, userState);
        }
        
        private void OnDeleteProffessionalBodyLineOperationCompleted(object arg) {
            if ((this.DeleteProffessionalBodyLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProffessionalBodyLineCompleted(this, new DeleteProffessionalBodyLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteEmploymentHistoryLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteEmploymentHistoryLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteEmploymentHistoryLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteEmploymentHistoryLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineAsync(int id, string appNo) {
            this.DeleteEmploymentHistoryLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteEmploymentHistoryLineOperationCompleted == null)) {
                this.DeleteEmploymentHistoryLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmploymentHistoryLineOperationCompleted);
            }
            this.InvokeAsync("DeleteEmploymentHistoryLine", new object[] {
                        id,
                        appNo}, this.DeleteEmploymentHistoryLineOperationCompleted, userState);
        }
        
        private void OnDeleteEmploymentHistoryLineOperationCompleted(object arg) {
            if ((this.DeleteEmploymentHistoryLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmploymentHistoryLineCompleted(this, new DeleteEmploymentHistoryLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRefereeLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRefereeLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRefereeLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteRefereeLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRefereeLineAsync(int id, string appNo) {
            this.DeleteRefereeLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteRefereeLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteRefereeLineOperationCompleted == null)) {
                this.DeleteRefereeLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefereeLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRefereeLine", new object[] {
                        id,
                        appNo}, this.DeleteRefereeLineOperationCompleted, userState);
        }
        
        private void OnDeleteRefereeLineOperationCompleted(object arg) {
            if ((this.DeleteRefereeLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefereeLineCompleted(this, new DeleteRefereeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddDeclaration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddDeclaration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDeclaration(bool declaration, string appNo) {
            object[] results = this.Invoke("AddDeclaration", new object[] {
                        declaration,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeclarationAsync(bool declaration, string appNo) {
            this.AddDeclarationAsync(declaration, appNo, null);
        }
        
        /// <remarks/>
        public void AddDeclarationAsync(bool declaration, string appNo, object userState) {
            if ((this.AddDeclarationOperationCompleted == null)) {
                this.AddDeclarationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeclarationOperationCompleted);
            }
            this.InvokeAsync("AddDeclaration", new object[] {
                        declaration,
                        appNo}, this.AddDeclarationOperationCompleted, userState);
        }
        
        private void OnAddDeclarationOperationCompleted(object arg) {
            if ((this.AddDeclarationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeclarationCompleted(this, new AddDeclarationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateProfileForExternalApplican" +
            "ts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateProfileForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateProfileForExternalApplicants(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectiveDate) {
            object[] results = this.Invoke("CreateProfileForExternalApplicants", new object[] {
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        email,
                        religion,
                        idNumber,
                        phoneNo,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        altPhoneNo,
                        altEmail,
                        positionHeld,
                        currentEmployer,
                        grossSalary,
                        effectiveDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProfileForExternalApplicantsAsync(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    System.DateTime effectiveDate) {
            this.CreateProfileForExternalApplicantsAsync(surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, email, religion, idNumber, phoneNo, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, nhifNo, nssfNo, pinNo, altPhoneNo, altEmail, positionHeld, currentEmployer, grossSalary, effectiveDate, null);
        }
        
        /// <remarks/>
        public void CreateProfileForExternalApplicantsAsync(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    System.DateTime effectiveDate, 
                    object userState) {
            if ((this.CreateProfileForExternalApplicantsOperationCompleted == null)) {
                this.CreateProfileForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProfileForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("CreateProfileForExternalApplicants", new object[] {
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        email,
                        religion,
                        idNumber,
                        phoneNo,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        altPhoneNo,
                        altEmail,
                        positionHeld,
                        currentEmployer,
                        grossSalary,
                        effectiveDate}, this.CreateProfileForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnCreateProfileForExternalApplicantsOperationCompleted(object arg) {
            if ((this.CreateProfileForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProfileForExternalApplicantsCompleted(this, new CreateProfileForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateAccountForExtenalApplicant" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateAccountForExtenalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateAccountForExtenalApplicants(string fname, string lname, string email, string password, string salt) {
            object[] results = this.Invoke("CreateAccountForExtenalApplicants", new object[] {
                        fname,
                        lname,
                        email,
                        password,
                        salt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountForExtenalApplicantsAsync(string fname, string lname, string email, string password, string salt) {
            this.CreateAccountForExtenalApplicantsAsync(fname, lname, email, password, salt, null);
        }
        
        /// <remarks/>
        public void CreateAccountForExtenalApplicantsAsync(string fname, string lname, string email, string password, string salt, object userState) {
            if ((this.CreateAccountForExtenalApplicantsOperationCompleted == null)) {
                this.CreateAccountForExtenalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountForExtenalApplicantsOperationCompleted);
            }
            this.InvokeAsync("CreateAccountForExtenalApplicants", new object[] {
                        fname,
                        lname,
                        email,
                        password,
                        salt}, this.CreateAccountForExtenalApplicantsOperationCompleted, userState);
        }
        
        private void OnCreateAccountForExtenalApplicantsOperationCompleted(object arg) {
            if ((this.CreateAccountForExtenalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountForExtenalApplicantsCompleted(this, new CreateAccountForExtenalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ForgotPasswordtForExtenalApplica" +
            "nts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ForgotPasswordtForExtenalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ForgotPasswordtForExtenalApplicants(string email, string password, string salt) {
            object[] results = this.Invoke("ForgotPasswordtForExtenalApplicants", new object[] {
                        email,
                        password,
                        salt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPasswordtForExtenalApplicantsAsync(string email, string password, string salt) {
            this.ForgotPasswordtForExtenalApplicantsAsync(email, password, salt, null);
        }
        
        /// <remarks/>
        public void ForgotPasswordtForExtenalApplicantsAsync(string email, string password, string salt, object userState) {
            if ((this.ForgotPasswordtForExtenalApplicantsOperationCompleted == null)) {
                this.ForgotPasswordtForExtenalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPasswordtForExtenalApplicantsOperationCompleted);
            }
            this.InvokeAsync("ForgotPasswordtForExtenalApplicants", new object[] {
                        email,
                        password,
                        salt}, this.ForgotPasswordtForExtenalApplicantsOperationCompleted, userState);
        }
        
        private void OnForgotPasswordtForExtenalApplicantsOperationCompleted(object arg) {
            if ((this.ForgotPasswordtForExtenalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPasswordtForExtenalApplicantsCompleted(this, new ForgotPasswordtForExtenalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateIctRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateIctRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateIctRequest(string empNo, string description, string category, string asset, string subcategory) {
            object[] results = this.Invoke("CreateIctRequest", new object[] {
                        empNo,
                        description,
                        category,
                        asset,
                        subcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateIctRequestAsync(string empNo, string description, string category, string asset, string subcategory) {
            this.CreateIctRequestAsync(empNo, description, category, asset, subcategory, null);
        }
        
        /// <remarks/>
        public void CreateIctRequestAsync(string empNo, string description, string category, string asset, string subcategory, object userState) {
            if ((this.CreateIctRequestOperationCompleted == null)) {
                this.CreateIctRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateIctRequestOperationCompleted);
            }
            this.InvokeAsync("CreateIctRequest", new object[] {
                        empNo,
                        description,
                        category,
                        asset,
                        subcategory}, this.CreateIctRequestOperationCompleted, userState);
        }
        
        private void OnCreateIctRequestOperationCompleted(object arg) {
            if ((this.CreateIctRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateIctRequestCompleted(this, new CreateIctRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ProvideIctfeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ProvideIctfeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProvideIctfeedback(string appNo, string description) {
            object[] results = this.Invoke("ProvideIctfeedback", new object[] {
                        appNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProvideIctfeedbackAsync(string appNo, string description) {
            this.ProvideIctfeedbackAsync(appNo, description, null);
        }
        
        /// <remarks/>
        public void ProvideIctfeedbackAsync(string appNo, string description, object userState) {
            if ((this.ProvideIctfeedbackOperationCompleted == null)) {
                this.ProvideIctfeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvideIctfeedbackOperationCompleted);
            }
            this.InvokeAsync("ProvideIctfeedback", new object[] {
                        appNo,
                        description}, this.ProvideIctfeedbackOperationCompleted, userState);
        }
        
        private void OnProvideIctfeedbackOperationCompleted(object arg) {
            if ((this.ProvideIctfeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProvideIctfeedbackCompleted(this, new ProvideIctfeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateIctRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateIctRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateIctRequest(string appNo, string description) {
            object[] results = this.Invoke("UpdateIctRequest", new object[] {
                        appNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIctRequestAsync(string appNo, string description) {
            this.UpdateIctRequestAsync(appNo, description, null);
        }
        
        /// <remarks/>
        public void UpdateIctRequestAsync(string appNo, string description, object userState) {
            if ((this.UpdateIctRequestOperationCompleted == null)) {
                this.UpdateIctRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIctRequestOperationCompleted);
            }
            this.InvokeAsync("UpdateIctRequest", new object[] {
                        appNo,
                        description}, this.UpdateIctRequestOperationCompleted, userState);
        }
        
        private void OnUpdateIctRequestOperationCompleted(object arg) {
            if ((this.UpdateIctRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIctRequestCompleted(this, new UpdateIctRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyexternalJob", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyexternalJob_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyexternalJob(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            object[] results = this.Invoke("ApplyexternalJob", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyexternalJobAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            this.ApplyexternalJobAsync(jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, phoneNo, email, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, null);
        }
        
        /// <remarks/>
        public void ApplyexternalJobAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    object userState) {
            if ((this.ApplyexternalJobOperationCompleted == null)) {
                this.ApplyexternalJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyexternalJobOperationCompleted);
            }
            this.InvokeAsync("ApplyexternalJob", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails}, this.ApplyexternalJobOperationCompleted, userState);
        }
        
        private void OnApplyexternalJobOperationCompleted(object arg) {
            if ((this.ApplyexternalJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyexternalJobCompleted(this, new ApplyexternalJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetItemsByLocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetItemsByLocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemsByLocation(string location, string category) {
            object[] results = this.Invoke("GetItemsByLocation", new object[] {
                        location,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsByLocationAsync(string location, string category) {
            this.GetItemsByLocationAsync(location, category, null);
        }
        
        /// <remarks/>
        public void GetItemsByLocationAsync(string location, string category, object userState) {
            if ((this.GetItemsByLocationOperationCompleted == null)) {
                this.GetItemsByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsByLocationOperationCompleted);
            }
            this.InvokeAsync("GetItemsByLocation", new object[] {
                        location,
                        category}, this.GetItemsByLocationOperationCompleted, userState);
        }
        
        private void OnGetItemsByLocationOperationCompleted(object arg) {
            if ((this.GetItemsByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsByLocationCompleted(this, new GetItemsByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetItemDescByLocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetItemDescByLocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemDescByLocation(string location, string category) {
            object[] results = this.Invoke("GetItemDescByLocation", new object[] {
                        location,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemDescByLocationAsync(string location, string category) {
            this.GetItemDescByLocationAsync(location, category, null);
        }
        
        /// <remarks/>
        public void GetItemDescByLocationAsync(string location, string category, object userState) {
            if ((this.GetItemDescByLocationOperationCompleted == null)) {
                this.GetItemDescByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemDescByLocationOperationCompleted);
            }
            this.InvokeAsync("GetItemDescByLocation", new object[] {
                        location,
                        category}, this.GetItemDescByLocationOperationCompleted, userState);
        }
        
        private void OnGetItemDescByLocationOperationCompleted(object arg) {
            if ((this.GetItemDescByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemDescByLocationCompleted(this, new GetItemDescByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AssignHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AssignHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AssignHelpdeskRequest(string jobNo, string assignee) {
            object[] results = this.Invoke("AssignHelpdeskRequest", new object[] {
                        jobNo,
                        assignee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AssignHelpdeskRequestAsync(string jobNo, string assignee) {
            this.AssignHelpdeskRequestAsync(jobNo, assignee, null);
        }
        
        /// <remarks/>
        public void AssignHelpdeskRequestAsync(string jobNo, string assignee, object userState) {
            if ((this.AssignHelpdeskRequestOperationCompleted == null)) {
                this.AssignHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("AssignHelpdeskRequest", new object[] {
                        jobNo,
                        assignee}, this.AssignHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnAssignHelpdeskRequestOperationCompleted(object arg) {
            if ((this.AssignHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignHelpdeskRequestCompleted(this, new AssignHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EscalatedHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EscalatedHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EscalatedHelpdeskRequest(string jobNo, string assignee, string description) {
            object[] results = this.Invoke("EscalatedHelpdeskRequest", new object[] {
                        jobNo,
                        assignee,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestAsync(string jobNo, string assignee, string description) {
            this.EscalatedHelpdeskRequestAsync(jobNo, assignee, description, null);
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestAsync(string jobNo, string assignee, string description, object userState) {
            if ((this.EscalatedHelpdeskRequestOperationCompleted == null)) {
                this.EscalatedHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalatedHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("EscalatedHelpdeskRequest", new object[] {
                        jobNo,
                        assignee,
                        description}, this.EscalatedHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnEscalatedHelpdeskRequestOperationCompleted(object arg) {
            if ((this.EscalatedHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalatedHelpdeskRequestCompleted(this, new EscalatedHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ResolveHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ResolveHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResolveHelpdeskRequest(string jobNo, string description) {
            object[] results = this.Invoke("ResolveHelpdeskRequest", new object[] {
                        jobNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveHelpdeskRequestAsync(string jobNo, string description) {
            this.ResolveHelpdeskRequestAsync(jobNo, description, null);
        }
        
        /// <remarks/>
        public void ResolveHelpdeskRequestAsync(string jobNo, string description, object userState) {
            if ((this.ResolveHelpdeskRequestOperationCompleted == null)) {
                this.ResolveHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("ResolveHelpdeskRequest", new object[] {
                        jobNo,
                        description}, this.ResolveHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnResolveHelpdeskRequestOperationCompleted(object arg) {
            if ((this.ResolveHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveHelpdeskRequestCompleted(this, new ResolveHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ReopenHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ReopenHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ReopenHelpdeskRequest(string jobNo, string description) {
            object[] results = this.Invoke("ReopenHelpdeskRequest", new object[] {
                        jobNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReopenHelpdeskRequestAsync(string jobNo, string description) {
            this.ReopenHelpdeskRequestAsync(jobNo, description, null);
        }
        
        /// <remarks/>
        public void ReopenHelpdeskRequestAsync(string jobNo, string description, object userState) {
            if ((this.ReopenHelpdeskRequestOperationCompleted == null)) {
                this.ReopenHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReopenHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("ReopenHelpdeskRequest", new object[] {
                        jobNo,
                        description}, this.ReopenHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnReopenHelpdeskRequestOperationCompleted(object arg) {
            if ((this.ReopenHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReopenHelpdeskRequestCompleted(this, new ReopenHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddEmploymentHistoryForExternalA" +
            "pplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddEmploymentHistoryForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddEmploymentHistoryForExternalApplcants([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string email) {
            object[] results = this.Invoke("AddEmploymentHistoryForExternalApplcants", new object[] {
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryForExternalApplcantsAsync(System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string email) {
            this.AddEmploymentHistoryForExternalApplcantsAsync(startDate, endDate, company, designation, jobGrade, email, null);
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryForExternalApplcantsAsync(System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string email, object userState) {
            if ((this.AddEmploymentHistoryForExternalApplcantsOperationCompleted == null)) {
                this.AddEmploymentHistoryForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmploymentHistoryForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddEmploymentHistoryForExternalApplcants", new object[] {
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        email}, this.AddEmploymentHistoryForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddEmploymentHistoryForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddEmploymentHistoryForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmploymentHistoryForExternalApplcantsCompleted(this, new AddEmploymentHistoryForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAcademicQualificationsForExte" +
            "rnalApplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAcademicQualificationsForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicQualificationsForExternalApplcants(string email, string institution, string awardAttainment, string specialization, string gradeAttained, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddAcademicQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate) {
            this.AddAcademicQualificationsForExternalApplcantsAsync(email, institution, awardAttainment, specialization, gradeAttained, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddAcademicQualificationsForExternalApplcantsOperationCompleted == null)) {
                this.AddAcademicQualificationsForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicQualificationsForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddAcademicQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate}, this.AddAcademicQualificationsForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddAcademicQualificationsForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddAcademicQualificationsForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicQualificationsForExternalApplcantsCompleted(this, new AddAcademicQualificationsForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProffessionalQualificationsFo" +
            "rExternalApplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProffessionalQualificationsForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProffessionalQualificationsForExternalApplcants(string email, string institution, string awardAttainment, string specialization, string gradeAttained, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddProffessionalQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate) {
            this.AddProffessionalQualificationsForExternalApplcantsAsync(email, institution, awardAttainment, specialization, gradeAttained, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddProffessionalQualificationsForExternalApplcantsOperationCompleted == null)) {
                this.AddProffessionalQualificationsForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProffessionalQualificationsForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddProffessionalQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate}, this.AddProffessionalQualificationsForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddProffessionalQualificationsForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddProffessionalQualificationsForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProffessionalQualificationsForExternalApplcantsCompleted(this, new AddProffessionalQualificationsForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingAttendedForExternalAp" +
            "plcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingAttendedForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingAttendedForExternalApplcants([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string institution, string courseName, string email, string attained) {
            object[] results = this.Invoke("AddTrainingAttendedForExternalApplcants", new object[] {
                        fromDate,
                        toDate,
                        institution,
                        courseName,
                        email,
                        attained});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingAttendedForExternalApplcantsAsync(System.DateTime fromDate, System.DateTime toDate, string institution, string courseName, string email, string attained) {
            this.AddTrainingAttendedForExternalApplcantsAsync(fromDate, toDate, institution, courseName, email, attained, null);
        }
        
        /// <remarks/>
        public void AddTrainingAttendedForExternalApplcantsAsync(System.DateTime fromDate, System.DateTime toDate, string institution, string courseName, string email, string attained, object userState) {
            if ((this.AddTrainingAttendedForExternalApplcantsOperationCompleted == null)) {
                this.AddTrainingAttendedForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingAttendedForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddTrainingAttendedForExternalApplcants", new object[] {
                        fromDate,
                        toDate,
                        institution,
                        courseName,
                        email,
                        attained}, this.AddTrainingAttendedForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddTrainingAttendedForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddTrainingAttendedForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingAttendedForExternalApplcantsCompleted(this, new AddTrainingAttendedForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProfessionalBodyForExternalAp" +
            "plcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProfessionalBodyForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProfessionalBodyForExternalApplcants(string email, string pBody, string mNo, string mType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime rDate) {
            object[] results = this.Invoke("AddProfessionalBodyForExternalApplcants", new object[] {
                        email,
                        pBody,
                        mNo,
                        mType,
                        rDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProfessionalBodyForExternalApplcantsAsync(string email, string pBody, string mNo, string mType, System.DateTime rDate) {
            this.AddProfessionalBodyForExternalApplcantsAsync(email, pBody, mNo, mType, rDate, null);
        }
        
        /// <remarks/>
        public void AddProfessionalBodyForExternalApplcantsAsync(string email, string pBody, string mNo, string mType, System.DateTime rDate, object userState) {
            if ((this.AddProfessionalBodyForExternalApplcantsOperationCompleted == null)) {
                this.AddProfessionalBodyForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProfessionalBodyForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddProfessionalBodyForExternalApplcants", new object[] {
                        email,
                        pBody,
                        mNo,
                        mType,
                        rDate}, this.AddProfessionalBodyForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddProfessionalBodyForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddProfessionalBodyForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProfessionalBodyForExternalApplcantsCompleted(this, new AddProfessionalBodyForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateRefereeForExternalApplcant" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateRefereeForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRefereeForExternalApplcants(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod) {
            object[] results = this.Invoke("CreateRefereeForExternalApplcants", new object[] {
                        email,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        applicantEmail,
                        knownPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRefereeForExternalApplcantsAsync(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod) {
            this.CreateRefereeForExternalApplcantsAsync(email, name, occupation, address, postCode, phone, applicantEmail, knownPeriod, null);
        }
        
        /// <remarks/>
        public void CreateRefereeForExternalApplcantsAsync(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod, object userState) {
            if ((this.CreateRefereeForExternalApplcantsOperationCompleted == null)) {
                this.CreateRefereeForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRefereeForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("CreateRefereeForExternalApplcants", new object[] {
                        email,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        applicantEmail,
                        knownPeriod}, this.CreateRefereeForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnCreateRefereeForExternalApplcantsOperationCompleted(object arg) {
            if ((this.CreateRefereeForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRefereeForExternalApplcantsCompleted(this, new CreateRefereeForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteAcademicLineForExternalApp" +
            "licants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteAcademicLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAcademicLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteAcademicLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAcademicLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteAcademicLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteAcademicLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteAcademicLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteAcademicLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAcademicLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteAcademicLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteAcademicLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteAcademicLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteAcademicLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAcademicLineForExternalApplicantsCompleted(this, new DeleteAcademicLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProfessionalLineForExterna" +
            "lApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProfessionalLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProfessionalLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteProfessionalLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteProfessionalLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteProfessionalLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteProfessionalLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfessionalLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteProfessionalLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteProfessionalLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteProfessionalLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteProfessionalLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfessionalLineForExternalApplicantsCompleted(this, new DeleteProfessionalLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingLineForExternalApp" +
            "licants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteTrainingLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteTrainingLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteTrainingLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteTrainingLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteTrainingLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteTrainingLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingLineForExternalApplicantsCompleted(this, new DeleteTrainingLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProffessionalBodyLineForEx" +
            "ternalApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProffessionalBodyLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProffessionalBodyLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteProffessionalBodyLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteProffessionalBodyLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteProffessionalBodyLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteProffessionalBodyLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProffessionalBodyLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteProffessionalBodyLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteProffessionalBodyLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteProffessionalBodyLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteProffessionalBodyLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProffessionalBodyLineForExternalApplicantsCompleted(this, new DeleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteEmploymentHistoryLineForEx" +
            "ternalApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteEmploymentHistoryLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteEmploymentHistoryLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteEmploymentHistoryLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteEmploymentHistoryLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteEmploymentHistoryLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteEmploymentHistoryLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmploymentHistoryLineForExternalApplicantsCompleted(this, new DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRefereeLineForExternalAppl" +
            "icants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRefereeLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRefereeLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteRefereeLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRefereeLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteRefereeLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteRefereeLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteRefereeLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteRefereeLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefereeLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteRefereeLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteRefereeLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteRefereeLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteRefereeLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefereeLineForExternalApplicantsCompleted(this, new DeleteRefereeLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyOnline", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyOnline_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyOnline(string email, string jobId) {
            object[] results = this.Invoke("ApplyOnline", new object[] {
                        email,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyOnlineAsync(string email, string jobId) {
            this.ApplyOnlineAsync(email, jobId, null);
        }
        
        /// <remarks/>
        public void ApplyOnlineAsync(string email, string jobId, object userState) {
            if ((this.ApplyOnlineOperationCompleted == null)) {
                this.ApplyOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyOnlineOperationCompleted);
            }
            this.InvokeAsync("ApplyOnline", new object[] {
                        email,
                        jobId}, this.ApplyOnlineOperationCompleted, userState);
        }
        
        private void OnApplyOnlineOperationCompleted(object arg) {
            if ((this.ApplyOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyOnlineCompleted(this, new ApplyOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFavouriteJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFavouriteJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFavouriteJobs(string email, string jobId, string jobDesc) {
            object[] results = this.Invoke("AddFavouriteJobs", new object[] {
                        email,
                        jobId,
                        jobDesc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFavouriteJobsAsync(string email, string jobId, string jobDesc) {
            this.AddFavouriteJobsAsync(email, jobId, jobDesc, null);
        }
        
        /// <remarks/>
        public void AddFavouriteJobsAsync(string email, string jobId, string jobDesc, object userState) {
            if ((this.AddFavouriteJobsOperationCompleted == null)) {
                this.AddFavouriteJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFavouriteJobsOperationCompleted);
            }
            this.InvokeAsync("AddFavouriteJobs", new object[] {
                        email,
                        jobId,
                        jobDesc}, this.AddFavouriteJobsOperationCompleted, userState);
        }
        
        private void OnAddFavouriteJobsOperationCompleted(object arg) {
            if ((this.AddFavouriteJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFavouriteJobsCompleted(this, new AddFavouriteJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteFavouriteJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteFavouriteJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFavouriteJobs(int id, string jobId) {
            object[] results = this.Invoke("DeleteFavouriteJobs", new object[] {
                        id,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFavouriteJobsAsync(int id, string jobId) {
            this.DeleteFavouriteJobsAsync(id, jobId, null);
        }
        
        /// <remarks/>
        public void DeleteFavouriteJobsAsync(int id, string jobId, object userState) {
            if ((this.DeleteFavouriteJobsOperationCompleted == null)) {
                this.DeleteFavouriteJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFavouriteJobsOperationCompleted);
            }
            this.InvokeAsync("DeleteFavouriteJobs", new object[] {
                        id,
                        jobId}, this.DeleteFavouriteJobsOperationCompleted, userState);
        }
        
        private void OnDeleteFavouriteJobsOperationCompleted(object arg) {
            if ((this.DeleteFavouriteJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFavouriteJobsCompleted(this, new DeleteFavouriteJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddImprestSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddImprestSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddImprestSharepointLinks(string imprestno, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddImprestSharepointLinks", new object[] {
                        imprestno,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddImprestSharepointLinksAsync(string imprestno, string filename, string sharepointlink) {
            this.AddImprestSharepointLinksAsync(imprestno, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddImprestSharepointLinksAsync(string imprestno, string filename, string sharepointlink, object userState) {
            if ((this.AddImprestSharepointLinksOperationCompleted == null)) {
                this.AddImprestSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImprestSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddImprestSharepointLinks", new object[] {
                        imprestno,
                        filename,
                        sharepointlink}, this.AddImprestSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddImprestSharepointLinksOperationCompleted(object arg) {
            if ((this.AddImprestSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImprestSharepointLinksCompleted(this, new AddImprestSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddStoreRequsitionSharepointLink" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddStoreRequsitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStoreRequsitionSharepointLinks(string storerequsitionnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddStoreRequsitionSharepointLinks", new object[] {
                        storerequsitionnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStoreRequsitionSharepointLinksAsync(string storerequsitionnumber, string filename, string sharepointlink) {
            this.AddStoreRequsitionSharepointLinksAsync(storerequsitionnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddStoreRequsitionSharepointLinksAsync(string storerequsitionnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddStoreRequsitionSharepointLinksOperationCompleted == null)) {
                this.AddStoreRequsitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStoreRequsitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddStoreRequsitionSharepointLinks", new object[] {
                        storerequsitionnumber,
                        filename,
                        sharepointlink}, this.AddStoreRequsitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddStoreRequsitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddStoreRequsitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStoreRequsitionSharepointLinksCompleted(this, new AddStoreRequsitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddStaffClaimSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddStaffClaimSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStaffClaimSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddStaffClaimSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStaffClaimSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddStaffClaimSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddStaffClaimSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddStaffClaimSharepointLinksOperationCompleted == null)) {
                this.AddStaffClaimSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStaffClaimSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddStaffClaimSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddStaffClaimSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddStaffClaimSharepointLinksOperationCompleted(object arg) {
            if ((this.AddStaffClaimSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStaffClaimSharepointLinksCompleted(this, new AddStaffClaimSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddLeaveSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddLeaveSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLeaveSharepointLinks(string leaveno, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddLeaveSharepointLinks", new object[] {
                        leaveno,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLeaveSharepointLinksAsync(string leaveno, string filename, string sharepointlink) {
            this.AddLeaveSharepointLinksAsync(leaveno, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddLeaveSharepointLinksAsync(string leaveno, string filename, string sharepointlink, object userState) {
            if ((this.AddLeaveSharepointLinksOperationCompleted == null)) {
                this.AddLeaveSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLeaveSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddLeaveSharepointLinks", new object[] {
                        leaveno,
                        filename,
                        sharepointlink}, this.AddLeaveSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddLeaveSharepointLinksOperationCompleted(object arg) {
            if ((this.AddLeaveSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLeaveSharepointLinksCompleted(this, new AddLeaveSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddImprestSurrenderSharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddImprestSurrenderSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddImprestSurrenderSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddImprestSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddImprestSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddImprestSurrenderSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddImprestSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddImprestSurrenderSharepointLinksOperationCompleted == null)) {
                this.AddImprestSurrenderSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImprestSurrenderSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddImprestSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddImprestSurrenderSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddImprestSurrenderSharepointLinksOperationCompleted(object arg) {
            if ((this.AddImprestSurrenderSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImprestSurrenderSharepointLinksCompleted(this, new AddImprestSurrenderSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddPurchaseRequisitionSharepoint" +
            "Links", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddPurchaseRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPurchaseRequisitionSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddPurchaseRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPurchaseRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddPurchaseRequisitionSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddPurchaseRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddPurchaseRequisitionSharepointLinksOperationCompleted == null)) {
                this.AddPurchaseRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPurchaseRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddPurchaseRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddPurchaseRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddPurchaseRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddPurchaseRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPurchaseRequisitionSharepointLinksCompleted(this, new AddPurchaseRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionSharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddFleetRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddFleetRequisitionSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddFleetRequisitionSharepointLinksOperationCompleted == null)) {
                this.AddFleetRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddFleetRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionSharepointLinksCompleted(this, new AddFleetRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendSpecialImprestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendSpecialImprestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendSpecialImprestApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("SendSpecialImprestApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSpecialImprestApprovalAsync(string employeeNo, string imprestNo) {
            this.SendSpecialImprestApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void SendSpecialImprestApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.SendSpecialImprestApprovalOperationCompleted == null)) {
                this.SendSpecialImprestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSpecialImprestApprovalOperationCompleted);
            }
            this.InvokeAsync("SendSpecialImprestApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.SendSpecialImprestApprovalOperationCompleted, userState);
        }
        
        private void OnSendSpecialImprestApprovalOperationCompleted(object arg) {
            if ((this.SendSpecialImprestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSpecialImprestApprovalCompleted(this, new SendSpecialImprestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelPettyCashRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelPettyCashRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelPettyCashRequestApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("CancelPettyCashRequestApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPettyCashRequestApprovalAsync(string employeeNo, string imprestNo) {
            this.CancelPettyCashRequestApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void CancelPettyCashRequestApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.CancelPettyCashRequestApprovalOperationCompleted == null)) {
                this.CancelPettyCashRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPettyCashRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelPettyCashRequestApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.CancelPettyCashRequestApprovalOperationCompleted, userState);
        }
        
        private void OnCancelPettyCashRequestApprovalOperationCompleted(object arg) {
            if ((this.CancelPettyCashRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPettyCashRequestApprovalCompleted(this, new CancelPettyCashRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:PopulatePettyCashSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="PopulatePettyCashSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PopulatePettyCashSurrender(string employeeNo, string surrenderNo, string imprestNo, string region) {
            object[] results = this.Invoke("PopulatePettyCashSurrender", new object[] {
                        employeeNo,
                        surrenderNo,
                        imprestNo,
                        region});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PopulatePettyCashSurrenderAsync(string employeeNo, string surrenderNo, string imprestNo, string region) {
            this.PopulatePettyCashSurrenderAsync(employeeNo, surrenderNo, imprestNo, region, null);
        }
        
        /// <remarks/>
        public void PopulatePettyCashSurrenderAsync(string employeeNo, string surrenderNo, string imprestNo, string region, object userState) {
            if ((this.PopulatePettyCashSurrenderOperationCompleted == null)) {
                this.PopulatePettyCashSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulatePettyCashSurrenderOperationCompleted);
            }
            this.InvokeAsync("PopulatePettyCashSurrender", new object[] {
                        employeeNo,
                        surrenderNo,
                        imprestNo,
                        region}, this.PopulatePettyCashSurrenderOperationCompleted, userState);
        }
        
        private void OnPopulatePettyCashSurrenderOperationCompleted(object arg) {
            if ((this.PopulatePettyCashSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulatePettyCashSurrenderCompleted(this, new PopulatePettyCashSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdatePettyCashSurrenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdatePettyCashSurrenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePettyCashSurrenderLine(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt) {
            object[] results = this.Invoke("UpdatePettyCashSurrenderLine", new object[] {
                        employeeNo,
                        pettyCashNo,
                        lineNo,
                        amountSpent,
                        receipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePettyCashSurrenderLineAsync(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt) {
            this.UpdatePettyCashSurrenderLineAsync(employeeNo, pettyCashNo, lineNo, amountSpent, receipt, null);
        }
        
        /// <remarks/>
        public void UpdatePettyCashSurrenderLineAsync(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt, object userState) {
            if ((this.UpdatePettyCashSurrenderLineOperationCompleted == null)) {
                this.UpdatePettyCashSurrenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePettyCashSurrenderLineOperationCompleted);
            }
            this.InvokeAsync("UpdatePettyCashSurrenderLine", new object[] {
                        employeeNo,
                        pettyCashNo,
                        lineNo,
                        amountSpent,
                        receipt}, this.UpdatePettyCashSurrenderLineOperationCompleted, userState);
        }
        
        private void OnUpdatePettyCashSurrenderLineOperationCompleted(object arg) {
            if ((this.UpdatePettyCashSurrenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePettyCashSurrenderLineCompleted(this, new UpdatePettyCashSurrenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendPettyCashSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendPettyCashSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPettyCashSurrenderApproval(string employee, string surrenderNo) {
            object[] results = this.Invoke("SendPettyCashSurrenderApproval", new object[] {
                        employee,
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPettyCashSurrenderApprovalAsync(string employee, string surrenderNo) {
            this.SendPettyCashSurrenderApprovalAsync(employee, surrenderNo, null);
        }
        
        /// <remarks/>
        public void SendPettyCashSurrenderApprovalAsync(string employee, string surrenderNo, object userState) {
            if ((this.SendPettyCashSurrenderApprovalOperationCompleted == null)) {
                this.SendPettyCashSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPettyCashSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPettyCashSurrenderApproval", new object[] {
                        employee,
                        surrenderNo}, this.SendPettyCashSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnSendPettyCashSurrenderApprovalOperationCompleted(object arg) {
            if ((this.SendPettyCashSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPettyCashSurrenderApprovalCompleted(this, new SendPettyCashSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelPettyCashSurrenderApproval" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelPettyCashSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelPettyCashSurrenderApproval(string employeeNo, string surrenderNo) {
            object[] results = this.Invoke("CancelPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPettyCashSurrenderApprovalAsync(string employeeNo, string surrenderNo) {
            this.CancelPettyCashSurrenderApprovalAsync(employeeNo, surrenderNo, null);
        }
        
        /// <remarks/>
        public void CancelPettyCashSurrenderApprovalAsync(string employeeNo, string surrenderNo, object userState) {
            if ((this.CancelPettyCashSurrenderApprovalOperationCompleted == null)) {
                this.CancelPettyCashSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPettyCashSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        surrenderNo}, this.CancelPettyCashSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnCancelPettyCashSurrenderApprovalOperationCompleted(object arg) {
            if ((this.CancelPettyCashSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPettyCashSurrenderApprovalCompleted(this, new CancelPettyCashSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddPettyCashSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddPettyCashSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPettyCashSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddPettyCashSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPettyCashSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddPettyCashSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddPettyCashSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddPettyCashSharepointLinksOperationCompleted == null)) {
                this.AddPettyCashSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPettyCashSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddPettyCashSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddPettyCashSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddPettyCashSharepointLinksOperationCompleted(object arg) {
            if ((this.AddPettyCashSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPettyCashSharepointLinksCompleted(this, new AddPettyCashSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FngetImprestLineNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FngetImprestLineNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FngetImprestLineNo(string surrenderNo) {
            object[] results = this.Invoke("FngetImprestLineNo", new object[] {
                        surrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngetImprestLineNoAsync(string surrenderNo) {
            this.FngetImprestLineNoAsync(surrenderNo, null);
        }
        
        /// <remarks/>
        public void FngetImprestLineNoAsync(string surrenderNo, object userState) {
            if ((this.FngetImprestLineNoOperationCompleted == null)) {
                this.FngetImprestLineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngetImprestLineNoOperationCompleted);
            }
            this.InvokeAsync("FngetImprestLineNo", new object[] {
                        surrenderNo}, this.FngetImprestLineNoOperationCompleted, userState);
        }
        
        private void OnFngetImprestLineNoOperationCompleted(object arg) {
            if ((this.FngetImprestLineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngetImprestLineNoCompleted(this, new FngetImprestLineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:StudentTimetable", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="StudentTimetable_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string StudentTimetable(string code) {
            object[] results = this.Invoke("StudentTimetable", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StudentTimetableAsync(string code) {
            this.StudentTimetableAsync(code, null);
        }
        
        /// <remarks/>
        public void StudentTimetableAsync(string code, object userState) {
            if ((this.StudentTimetableOperationCompleted == null)) {
                this.StudentTimetableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStudentTimetableOperationCompleted);
            }
            this.InvokeAsync("StudentTimetable", new object[] {
                        code}, this.StudentTimetableOperationCompleted, userState);
        }
        
        private void OnStudentTimetableOperationCompleted(object arg) {
            if ((this.StudentTimetableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StudentTimetableCompleted(this, new StudentTimetableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:PrintReceipt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="PrintReceipt_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintReceipt(string receiptNoFilter) {
            object[] results = this.Invoke("PrintReceipt", new object[] {
                        receiptNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintReceiptAsync(string receiptNoFilter) {
            this.PrintReceiptAsync(receiptNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintReceiptAsync(string receiptNoFilter, object userState) {
            if ((this.PrintReceiptOperationCompleted == null)) {
                this.PrintReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintReceiptOperationCompleted);
            }
            this.InvokeAsync("PrintReceipt", new object[] {
                        receiptNoFilter}, this.PrintReceiptOperationCompleted, userState);
        }
        
        private void OnPrintReceiptOperationCompleted(object arg) {
            if ((this.PrintReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintReceiptCompleted(this, new PrintReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:PrintReceiptBookin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="PrintReceiptBookin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintReceiptBookin(string receiptNoFilter) {
            object[] results = this.Invoke("PrintReceiptBookin", new object[] {
                        receiptNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintReceiptBookinAsync(string receiptNoFilter) {
            this.PrintReceiptBookinAsync(receiptNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintReceiptBookinAsync(string receiptNoFilter, object userState) {
            if ((this.PrintReceiptBookinOperationCompleted == null)) {
                this.PrintReceiptBookinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintReceiptBookinOperationCompleted);
            }
            this.InvokeAsync("PrintReceiptBookin", new object[] {
                        receiptNoFilter}, this.PrintReceiptBookinOperationCompleted, userState);
        }
        
        private void OnPrintReceiptBookinOperationCompleted(object arg) {
            if ((this.PrintReceiptBookinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintReceiptBookinCompleted(this, new PrintReceiptBookinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:PrintReceiptExemption", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="PrintReceiptExemption_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintReceiptExemption(string receiptNoFilter) {
            object[] results = this.Invoke("PrintReceiptExemption", new object[] {
                        receiptNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintReceiptExemptionAsync(string receiptNoFilter) {
            this.PrintReceiptExemptionAsync(receiptNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintReceiptExemptionAsync(string receiptNoFilter, object userState) {
            if ((this.PrintReceiptExemptionOperationCompleted == null)) {
                this.PrintReceiptExemptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintReceiptExemptionOperationCompleted);
            }
            this.InvokeAsync("PrintReceiptExemption", new object[] {
                        receiptNoFilter}, this.PrintReceiptExemptionOperationCompleted, userState);
        }
        
        private void OnPrintReceiptExemptionOperationCompleted(object arg) {
            if ((this.PrintReceiptExemptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintReceiptExemptionCompleted(this, new PrintReceiptExemptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendStudentTimetableCompletedEventHandler(object sender, SendStudentTimetableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStudentTimetableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStudentTimetableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResultSlipCompletedEventHandler(object sender, ResultSlipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResultSlipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResultSlipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewStaffPerformanceContractCompletedEventHandler(object sender, FnNewStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedCoreInitiativesCompletedEventHandler(object sender, FnSubmitSelectedCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnsuggestsubindicatorsCompletedEventHandler(object sender, FnsuggestsubindicatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnsuggestsubindicatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnsuggestsubindicatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveCoreInitiativesCompletedEventHandler(object sender, FnSaveCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveCoreInitiativesCompletedEventHandler(object sender, FnRemoveCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSaveAditionalInitiativesCompletedEventHandler(object sender, FnSaveAditionalInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveAditionalInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveAditionalInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemoveAditionalInitiativeCompletedEventHandler(object sender, FnRemoveAditionalInitiativeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveAditionalInitiativeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveAditionalInitiativeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDeleteIndividualCardSubActivitiesCompletedEventHandler(object sender, FnDeleteIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewIndividualCardSubActivitiesCompletedEventHandler(object sender, FnNewIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditIndividualCardSubActivitiesCompletedEventHandler(object sender, FnEditIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendStaffPerformanceContractApprovalCompletedEventHandler(object sender, FnSendStaffPerformanceContractApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendStaffPerformanceContractApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendStaffPerformanceContractApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCancelStaffPerformanceContractCompletedEventHandler(object sender, FnCancelStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnLockStaffPerformanceContractCompletedEventHandler(object sender, FnLockStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLockStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLockStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSignStaffPerformanceContractCompletedEventHandler(object sender, FnSignStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSignStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSignStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateIndividualPcReportCompletedEventHandler(object sender, FnGenerateIndividualPcReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateIndividualPcReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateIndividualPcReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateIndividualPcSubIndicatorReportCompletedEventHandler(object sender, FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertJDTargetsCompletedEventHandler(object sender, FnInsertJDTargetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertJDTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertJDTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestJDCompletedEventHandler(object sender, FnSuggestJDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestJDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestJDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetAnnualWorkplanLinesCompletedEventHandler(object sender, FnGetAnnualWorkplanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAnnualWorkplanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAnnualWorkplanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertSelectedAdditionalActivitiesCompletedEventHandler(object sender, FnInsertSelectedAdditionalActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSelectedAdditionalActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSelectedAdditionalActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateCSPReportCompletedEventHandler(object sender, FnGenerateCSPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateCSPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateCSPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateAWPReportCompletedEventHandler(object sender, FnGenerateAWPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateAWPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateAWPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateBoardPCReportCompletedEventHandler(object sender, FnGenerateBoardPCReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateBoardPCReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateBoardPCReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedPLogCategories2CompletedEventHandler(object sender, FnSubmitSelectedPLogCategories2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedPLogCategories2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedPLogCategories2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewPerformanceLogEntry2CompletedEventHandler(object sender, FnNewPerformanceLogEntry2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPerformanceLogEntry2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPerformanceLogEntry2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetPlogLines2CompletedEventHandler(object sender, FnGetPlogLines2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPlogLines2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPlogLines2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetSubPlogLines2CompletedEventHandler(object sender, FnGetSubPlogLines2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetSubPlogLines2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetSubPlogLines2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestPlogLines2CompletedEventHandler(object sender, FnSuggestPlogLines2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestPlogLines2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestPlogLines2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSuggestPlogandSubPlogData2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUpdatePerformanceTargetLinesDetails2CompletedEventHandler(object sender, FnUpdatePerformanceTargetLinesDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePerformanceTargetLinesDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePerformanceTargetLinesDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemovePerformanceLogSubLine2CompletedEventHandler(object sender, FnRemovePerformanceLogSubLine2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemovePerformanceLogSubLine2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemovePerformanceLogSubLine2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRemovePerformanceLogLine2CompletedEventHandler(object sender, FnRemovePerformanceLogLine2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemovePerformanceLogLine2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemovePerformanceLogLine2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertPlogSubActivities2CompletedEventHandler(object sender, FnInsertPlogSubActivities2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPlogSubActivities2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPlogSubActivities2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSendPlogApproval2CompletedEventHandler(object sender, FnSendPlogApproval2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPlogApproval2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPlogApproval2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCancelPlogApproval2CompletedEventHandler(object sender, FnCancelPlogApproval2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelPlogApproval2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelPlogApproval2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGeneratePlogReport2CompletedEventHandler(object sender, FnGeneratePlogReport2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePlogReport2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePlogReport2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedAddPLogCategoriesCompletedEventHandler(object sender, FnSubmitSelectedAddPLogCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedAddPLogCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedAddPLogCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedJDPLogCategoriesCompletedEventHandler(object sender, FnSubmitSelectedJDPLogCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedJDPLogCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedJDPLogCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSelectedPLogCategoriesCompletedEventHandler(object sender, FnSubmitSelectedPLogCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedPLogCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedPLogCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnNewStandardAppraisalCompletedEventHandler(object sender, FnNewStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnLoadCompetenciesCompletedEventHandler(object sender, FnLoadCompetenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoadCompetenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoadCompetenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitStandardAppraisalCompletedEventHandler(object sender, FnSubmitStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler(object sender, FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGenerateStandardAppraisalReportCompletedEventHandler(object sender, FnGenerateStandardAppraisalReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateStandardAppraisalReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateStandardAppraisalReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddInnovationResponseCompletedEventHandler(object sender, FnAddInnovationResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddInnovationResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddInnovationResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddInnovationResponseLinesCompletedEventHandler(object sender, FnAddInnovationResponseLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddInnovationResponseLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddInnovationResponseLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddInnovationObjectiveResponseLinesCompletedEventHandler(object sender, FnAddInnovationObjectiveResponseLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddInnovationObjectiveResponseLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddInnovationObjectiveResponseLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddInnovationAdditionalResponseLinesCompletedEventHandler(object sender, FnAddInnovationAdditionalResponseLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddInnovationAdditionalResponseLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddInnovationAdditionalResponseLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditInnovationOverviewCompletedEventHandler(object sender, EditInnovationOverviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditInnovationOverviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditInnovationOverviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditInnovationObjectiveCompletedEventHandler(object sender, EditInnovationObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditInnovationObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditInnovationObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditInnovationAdditionNotesCompletedEventHandler(object sender, EditInnovationAdditionNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditInnovationAdditionNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditInnovationAdditionNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteInnovationResponseLineCompletedEventHandler(object sender, DeleteInnovationResponseLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInnovationResponseLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInnovationResponseLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateInnovationReportCompletedEventHandler(object sender, GenerateInnovationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateInnovationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateInnovationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitResponseCompletedEventHandler(object sender, FnSubmitResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateRMReportCompletedEventHandler(object sender, GenerateRMReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRMReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRMReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateManagementPlanSummeryCompletedEventHandler(object sender, GenerateManagementPlanSummeryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateManagementPlanSummeryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateManagementPlanSummeryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateRiskFrameworkTestCompletedEventHandler(object sender, GenerateRiskFrameworkTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRiskFrameworkTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRiskFrameworkTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SalaryAdvanceApplicationCompletedEventHandler(object sender, SalaryAdvanceApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalaryAdvanceApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalaryAdvanceApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendSalaryAdvanceApprovalCompletedEventHandler(object sender, SendSalaryAdvanceApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSalaryAdvanceApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSalaryAdvanceApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CarLoanApplicationCompletedEventHandler(object sender, CarLoanApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CarLoanApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CarLoanApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendCarLoanApprovalCompletedEventHandler(object sender, SendCarLoanApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCarLoanApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCarLoanApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendStudentResultSlipCompletedEventHandler(object sender, SendStudentResultSlipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStudentResultSlipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStudentResultSlipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRiskStatusReportCompletedEventHandler(object sender, CreateRiskStatusReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRiskStatusReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRiskStatusReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CloseRiskCompletedEventHandler(object sender, CloseRiskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseRiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseRiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddRiskResponseCompletedEventHandler(object sender, AddRiskResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRiskResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRiskResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddRiskRegisterCompletedEventHandler(object sender, FnAddRiskRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddRiskRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddRiskRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRiskRegisterDivisionCompletedEventHandler(object sender, CreateRiskRegisterDivisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRiskRegisterDivisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRiskRegisterDivisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PostDivisionRegisterCompletedEventHandler(object sender, PostDivisionRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostDivisionRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostDivisionRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddRiskOwnershipCompletedEventHandler(object sender, FnAddRiskOwnershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddRiskOwnershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddRiskOwnershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddRiskMitigationCompletedEventHandler(object sender, FnAddRiskMitigationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddRiskMitigationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddRiskMitigationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRiskCompletedEventHandler(object sender, DeleteRiskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LeaveApplicationCompletedEventHandler(object sender, LeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GeneratePayslipCompletedEventHandler(object sender, GeneratePayslipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePayslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePayslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateEmployeeStatementCompletedEventHandler(object sender, GenerateEmployeeStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateEmployeeStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateEmployeeStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateP9CompletedEventHandler(object sender, GenerateP9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateP9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateP9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddHobbyCompletedEventHandler(object sender, AddHobbyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHobbyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHobbyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateGeneralDetailsCompletedEventHandler(object sender, UpdateGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePersonalDetailsCompletedEventHandler(object sender, UpdatePersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCommunicationDetailsCompletedEventHandler(object sender, UpdateCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddRefereeCompletedEventHandler(object sender, AddRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddQualificationCompletedEventHandler(object sender, AddQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyCompletedEventHandler(object sender, ApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ImprestGeneralDetailsCompletedEventHandler(object sender, ImprestGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImprestGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImprestGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetImprestObjectiveCompletedEventHandler(object sender, GetImprestObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImprestObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImprestObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTeamMemberCompletedEventHandler(object sender, AddTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFuelCompletedEventHandler(object sender, AddFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCasualsCompletedEventHandler(object sender, AddCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOtherCostsCompletedEventHandler(object sender, AddOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendImprestMemoApprovalCompletedEventHandler(object sender, SendImprestMemoApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestMemoApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestMemoApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateImprestSurrenderCompletedEventHandler(object sender, CreateImprestSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateImprestSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateImprestSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendImprestSurrenderApprovalCompletedEventHandler(object sender, SendImprestSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateSurrenderLineCompletedEventHandler(object sender, UpdateSurrenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSurrenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSurrenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreatePurchaseStoreRequisitionCompletedEventHandler(object sender, CreatePurchaseStoreRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePurchaseStoreRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePurchaseStoreRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRequisitionLineCompletedEventHandler(object sender, CreateRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendPurchaseRequisitionApprovalCompletedEventHandler(object sender, SendPurchaseRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPurchaseRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPurchaseRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateFleetRequisitionCompletedEventHandler(object sender, CreateFleetRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFleetRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFleetRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitionStaffCompletedEventHandler(object sender, AddFleetRequisitionStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitionNonStaffCompletedEventHandler(object sender, AddFleetRequisitionNonStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionNonStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionNonStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendFleetRequisitionApprovalCompletedEventHandler(object sender, SendFleetRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFleetRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFleetRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveStaffFromTravelRequisitionCompletedEventHandler(object sender, RemoveStaffFromTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveStaffFromTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveStaffFromTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveMemberFromImprestMemoCompletedEventHandler(object sender, RemoveMemberFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMemberFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMemberFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditTeamMemberCompletedEventHandler(object sender, EditTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFuelFromImprestMemoCompletedEventHandler(object sender, RemoveFuelFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFuelFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFuelFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditFuelCompletedEventHandler(object sender, EditFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveCasualsCompletedEventHandler(object sender, RemoveCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditCasualsCompletedEventHandler(object sender, EditCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveOtherCostsCompletedEventHandler(object sender, RemoveOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditOtherCostsCompletedEventHandler(object sender, EditOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateLeaveFormCompletedEventHandler(object sender, GenerateLeaveFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateLeaveFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateLeaveFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendRecordForApprovalCompletedEventHandler(object sender, SendRecordForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRecordForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRecordForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelRecordApprovalCompletedEventHandler(object sender, CancelRecordApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelRecordApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelRecordApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRequisitionLineCompletedEventHandler(object sender, DeleteRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendStaffClaimApprovalCompletedEventHandler(object sender, SendStaffClaimApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStaffClaimApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStaffClaimApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffClaimCompletedEventHandler(object sender, CreateStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteStaffClaimLineCompletedEventHandler(object sender, DeleteStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStaffClaimLineCompletedEventHandler(object sender, CreateStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditStaffClaimLineCompletedEventHandler(object sender, EditStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendStoreRequisitionApprovalCompletedEventHandler(object sender, SendStoreRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStoreRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStoreRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStoreRequisitionLineCompletedEventHandler(object sender, CreateStoreRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStoreRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStoreRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyexternalHrJobsCompletedEventHandler(object sender, ApplyexternalHrJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyexternalHrJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyexternalHrJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyinternalHrJobsCompletedEventHandler(object sender, ApplyinternalHrJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyinternalHrJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyinternalHrJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateEmploymentHistoryCompletedEventHandler(object sender, UpdateEmploymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmploymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmploymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddEmploymentHistoryCompletedEventHandler(object sender, AddEmploymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmploymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmploymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAcademicQualificationsCompletedEventHandler(object sender, AddAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProffessionalQualificationsCompletedEventHandler(object sender, AddProffessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProffessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProffessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTrainingAttendedCompletedEventHandler(object sender, AddTrainingAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProfessionalBodyCompletedEventHandler(object sender, AddProfessionalBodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProfessionalBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProfessionalBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddApplicantAccomplishmentCompletedEventHandler(object sender, AddApplicantAccomplishmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddApplicantAccomplishmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddApplicantAccomplishmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAbilityDetailsCompletedEventHandler(object sender, AddAbilityDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAbilityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAbilityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRefereeCompletedEventHandler(object sender, CreateRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCurrentDutiesSkillsCompletedEventHandler(object sender, AddCurrentDutiesSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCurrentDutiesSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCurrentDutiesSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddOtherPersonalDetailsCompletedEventHandler(object sender, AddOtherPersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherPersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherPersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDutiesDetailsCompletedEventHandler(object sender, AddDutiesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDutiesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDutiesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAcademicLineCompletedEventHandler(object sender, DeleteAcademicLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAcademicLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAcademicLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProfessionalLineCompletedEventHandler(object sender, DeleteProfessionalLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfessionalLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfessionalLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTrainingLineCompletedEventHandler(object sender, DeleteTrainingLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProffessionalBodyLineCompletedEventHandler(object sender, DeleteProffessionalBodyLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProffessionalBodyLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProffessionalBodyLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteEmploymentHistoryLineCompletedEventHandler(object sender, DeleteEmploymentHistoryLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmploymentHistoryLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmploymentHistoryLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRefereeLineCompletedEventHandler(object sender, DeleteRefereeLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRefereeLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRefereeLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDeclarationCompletedEventHandler(object sender, AddDeclarationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeclarationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeclarationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateProfileForExternalApplicantsCompletedEventHandler(object sender, CreateProfileForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProfileForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProfileForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateAccountForExtenalApplicantsCompletedEventHandler(object sender, CreateAccountForExtenalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountForExtenalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountForExtenalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ForgotPasswordtForExtenalApplicantsCompletedEventHandler(object sender, ForgotPasswordtForExtenalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPasswordtForExtenalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPasswordtForExtenalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateIctRequestCompletedEventHandler(object sender, CreateIctRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateIctRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateIctRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ProvideIctfeedbackCompletedEventHandler(object sender, ProvideIctfeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProvideIctfeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProvideIctfeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateIctRequestCompletedEventHandler(object sender, UpdateIctRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIctRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIctRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyexternalJobCompletedEventHandler(object sender, ApplyexternalJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyexternalJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyexternalJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetItemsByLocationCompletedEventHandler(object sender, GetItemsByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetItemDescByLocationCompletedEventHandler(object sender, GetItemDescByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemDescByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemDescByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AssignHelpdeskRequestCompletedEventHandler(object sender, AssignHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EscalatedHelpdeskRequestCompletedEventHandler(object sender, EscalatedHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EscalatedHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EscalatedHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResolveHelpdeskRequestCompletedEventHandler(object sender, ResolveHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReopenHelpdeskRequestCompletedEventHandler(object sender, ReopenHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReopenHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReopenHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddEmploymentHistoryForExternalApplcantsCompletedEventHandler(object sender, AddEmploymentHistoryForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmploymentHistoryForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmploymentHistoryForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddAcademicQualificationsForExternalApplcantsCompletedEventHandler(object sender, AddAcademicQualificationsForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicQualificationsForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicQualificationsForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProffessionalQualificationsForExternalApplcantsCompletedEventHandler(object sender, AddProffessionalQualificationsForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProffessionalQualificationsForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProffessionalQualificationsForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddTrainingAttendedForExternalApplcantsCompletedEventHandler(object sender, AddTrainingAttendedForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingAttendedForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingAttendedForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddProfessionalBodyForExternalApplcantsCompletedEventHandler(object sender, AddProfessionalBodyForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProfessionalBodyForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProfessionalBodyForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRefereeForExternalApplcantsCompletedEventHandler(object sender, CreateRefereeForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRefereeForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRefereeForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAcademicLineForExternalApplicantsCompletedEventHandler(object sender, DeleteAcademicLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAcademicLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAcademicLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProfessionalLineForExternalApplicantsCompletedEventHandler(object sender, DeleteProfessionalLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfessionalLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfessionalLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteTrainingLineForExternalApplicantsCompletedEventHandler(object sender, DeleteTrainingLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteProffessionalBodyLineForExternalApplicantsCompletedEventHandler(object sender, DeleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventHandler(object sender, DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteRefereeLineForExternalApplicantsCompletedEventHandler(object sender, DeleteRefereeLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRefereeLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRefereeLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ApplyOnlineCompletedEventHandler(object sender, ApplyOnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFavouriteJobsCompletedEventHandler(object sender, AddFavouriteJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFavouriteJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFavouriteJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFavouriteJobsCompletedEventHandler(object sender, DeleteFavouriteJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFavouriteJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFavouriteJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddImprestSharepointLinksCompletedEventHandler(object sender, AddImprestSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImprestSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImprestSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStoreRequsitionSharepointLinksCompletedEventHandler(object sender, AddStoreRequsitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStoreRequsitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStoreRequsitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddStaffClaimSharepointLinksCompletedEventHandler(object sender, AddStaffClaimSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStaffClaimSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStaffClaimSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddLeaveSharepointLinksCompletedEventHandler(object sender, AddLeaveSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLeaveSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLeaveSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddImprestSurrenderSharepointLinksCompletedEventHandler(object sender, AddImprestSurrenderSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImprestSurrenderSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImprestSurrenderSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPurchaseRequisitionSharepointLinksCompletedEventHandler(object sender, AddPurchaseRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPurchaseRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPurchaseRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFleetRequisitionSharepointLinksCompletedEventHandler(object sender, AddFleetRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendSpecialImprestApprovalCompletedEventHandler(object sender, SendSpecialImprestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSpecialImprestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSpecialImprestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelPettyCashRequestApprovalCompletedEventHandler(object sender, CancelPettyCashRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPettyCashRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPettyCashRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PopulatePettyCashSurrenderCompletedEventHandler(object sender, PopulatePettyCashSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulatePettyCashSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulatePettyCashSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePettyCashSurrenderLineCompletedEventHandler(object sender, UpdatePettyCashSurrenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePettyCashSurrenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePettyCashSurrenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendPettyCashSurrenderApprovalCompletedEventHandler(object sender, SendPettyCashSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPettyCashSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPettyCashSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelPettyCashSurrenderApprovalCompletedEventHandler(object sender, CancelPettyCashSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPettyCashSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPettyCashSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPettyCashSharepointLinksCompletedEventHandler(object sender, AddPettyCashSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPettyCashSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPettyCashSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FngetImprestLineNoCompletedEventHandler(object sender, FngetImprestLineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngetImprestLineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngetImprestLineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void StudentTimetableCompletedEventHandler(object sender, StudentTimetableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StudentTimetableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StudentTimetableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintReceiptCompletedEventHandler(object sender, PrintReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintReceiptBookinCompletedEventHandler(object sender, PrintReceiptBookinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintReceiptBookinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintReceiptBookinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintReceiptExemptionCompletedEventHandler(object sender, PrintReceiptExemptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintReceiptExemptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintReceiptExemptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591